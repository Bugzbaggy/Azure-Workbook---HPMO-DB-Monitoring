{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "nav",
        "links": [
          {
            "id": "aaed2293-1387-42d1-a90c-237755c6ec3e",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "DB Backup Reporting",
            "subTarget": "report",
            "style": "primary"
          },
          {
            "id": "472c33f9-caa8-4aaa-ac3a-ab87226cd581",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Database Backup Status",
            "subTarget": "backup",
            "style": "primary"
          },
          {
            "id": "8708e269-ddf9-48c9-b15b-4d94c40fbe53",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Database Alerts",
            "subTarget": "alert",
            "style": "primary"
          },
          {
            "id": "e0808e86-5607-4964-8726-0da6a43cddc2",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Server Statistics",
            "subTarget": "stat",
            "style": "primary"
          },
          {
            "id": "6bb9a944-1bee-4214-88d8-8b1e540c7470",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Database Health Check",
            "subTarget": "check",
            "style": "primary"
          },
          {
            "id": "d5c7344b-8787-42fa-9ca8-e218cbc465ae",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "SQL & SAP HANA in Azure VM",
            "subTarget": "list",
            "style": "primary"
          }
        ]
      },
      "name": "links - 0"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "SQL-SAPHANA Overall Backup Health Status",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "recoveryservicesresources\r\n| where type == \"microsoft.recoveryservices/vaults/backupfabrics/protectioncontainers/protecteditems\"\r\n| where properties.dataSourceInfo.datasourceType in~ ('SQLDatabase','SAPHanaDatabase')\r\n//| where properties.protectedItemType == 'AzureVmWorkloadSQLDatabase'\r\n| where properties.policyInfo.name in~  ('CorePolicy-SQL', 'CorePolicy-HANA')\r\n| project properties.serverName, name, properties.policyInfo.name, Status=properties.protectedItemHealthStatus, properties.lastBackupTime\r\n| summarize Total=count() by tostring(Status)",
                    "size": 4,
                    "title": "SQL & SAP HANA",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "/subscriptions/2df031a7-e21f-49c7-b61e-b0bb3e097c79",
                      "/subscriptions/3a8032ca-dc2c-4137-9f64-f8daaa55c78d",
                      "/subscriptions/cbb944ea-aa79-4701-909a-e114ab57ad7a"
                    ],
                    "visualization": "tiles",
                    "tileSettings": {
                      "titleContent": {
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "Status",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "colors",
                          "thresholdsGrid": [
                            {
                              "operator": "contains",
                              "thresholdValue": "Healthy",
                              "representation": "green",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "contains",
                              "thresholdValue": "Unhealthy",
                              "representation": "redBright",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "contains",
                              "thresholdValue": "NotReachable",
                              "representation": "gray",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "blue",
                              "text": "{0}{1}"
                            }
                          ]
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal",
                            "maximumFractionDigits": 2,
                            "maximumSignificantDigits": 3
                          }
                        }
                      },
                      "rightContent": {
                        "columnMatch": "Total",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "colors",
                          "thresholdsGrid": [
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": null,
                              "text": "{0}{1}"
                            }
                          ]
                        }
                      },
                      "showBorder": false,
                      "size": "full"
                    }
                  },
                  "conditionalVisibility": {
                    "parameterName": "sql",
                    "comparison": "isEqualTo",
                    "value": "n"
                  },
                  "showPin": true,
                  "name": "query - 5"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "recoveryservicesresources\r\n| where type == \"microsoft.recoveryservices/vaults/backupfabrics/protectioncontainers/protecteditems\"\r\n| extend InstanceOrAOAG = case(isnotnull(properties.serverName),strcat(properties.serverName,'/', properties.parentName), 'NA')\r\n| extend DBType = case(InstanceOrAOAG contains \"AG\", 'Always on AG',\r\n                                    (InstanceOrAOAG contains \"DB\") or (InstanceOrAOAG contains \"azsapd003\") or (InstanceOrAOAG contains \"azsapd007\") or (InstanceOrAOAG contains \"azsapddb04\") or (InstanceOrAOAG contains \"azsapddb07\") or (InstanceOrAOAG contains \"azsapd035\") or (InstanceOrAOAG contains \"dkcdcsapp076\") or (InstanceOrAOAG contains \"dkcdcsapd082\") or (InstanceOrAOAG contains \"dkcdcsapd976\") or (InstanceOrAOAG contains \"azsapd041\"), 'Standalone Instance',\r\n                                    \"--\")\r\n| where properties.dataSourceInfo.datasourceType in~ ('SQLDatabase','SAPHanaDatabase')\r\n//| where properties.protectedItemType == 'AzureVmWorkloadSQLDatabase'\r\n| where properties.policyInfo.name in~  ('CorePolicy-SQL', 'CorePolicy-HANA')\r\n| project ServerName = properties.serverName, DatabaseName = name, DBType, HealthStatus=properties.protectedItemHealthStatus, ProtectState = properties.protectionState, Policy = properties.policyInfo.name, LastBackupTime = properties.lastBackupTime //BackupStatus=properties.lastBackupStatus\r\n| sort by tostring(HealthStatus) desc\r\n//| summarize count() by  BackupStatus = tostring(properties_lastBackupStatus)",
                    "size": 0,
                    "title": "Backup Items",
                    "showRefreshButton": true,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "/subscriptions/cf49a21b-2b75-4240-b62b-2f5b04f53563",
                      "/subscriptions/ce5302c7-4de2-4fab-affe-786447c1684c",
                      "/subscriptions/cbb944ea-aa79-4701-909a-e114ab57ad7a",
                      "/subscriptions/3a8032ca-dc2c-4137-9f64-f8daaa55c78d",
                      "/subscriptions/2df031a7-e21f-49c7-b61e-b0bb3e097c79"
                    ],
                    "gridSettings": {
                      "rowLimit": 1000,
                      "filter": true
                    }
                  },
                  "customWidth": "75",
                  "showPin": true,
                  "name": "Backup Items",
                  "styleSettings": {
                    "maxWidth": "50",
                    "showBorder": true
                  }
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "recoveryservicesresources\r\n                | where type in~ ('microsoft.recoveryservices/vaults/backupjobs')\r\n                //| where properties.dataSourceType in~ ('SQLDataBase','SAPHanaDatabase')\r\n                | extend vaultName = case(type =~ 'microsoft.dataprotection/backupVaults/backupJobs', properties.vaultName,\r\n                                          type =~ 'Microsoft.RecoveryServices/vaults/backupJobs', split(split(id, '/Microsoft.RecoveryServices/vaults/')[1],'/')[0],'--')\r\n                | extend friendlyName = case(type =~ 'microsoft.dataprotection/backupVaults/backupJobs', strcat(properties.dataSourceSetName , '/', properties.dataSourceName),\r\n                                             type =~ 'Microsoft.RecoveryServices/vaults/backupJobs', properties.entityFriendlyName, '--')\r\n                | extend workloadType = tostring(case (isnotnull(properties.workloadType), properties.workloadType, properties.backupManagementType == 'AzureIaasVM', 'VM',\r\n                                                                 properties.backupManagementType == 'AzureStorage', 'AzureFileShare','--'))\r\n                | extend dataSourceType = case(type =~ 'Microsoft.RecoveryServices/vaults/backupJobs' ,strcat(properties.backupManagementType,'/',workloadType),\r\n                                               type =~ 'microsoft.dataprotection/backupVaults/backupJobs',properties.dataSourceType,'--')\r\n                | extend ErrorDescription = properties.errorDetails \r\n                | extend backupInstanceName = properties.backupInstanceId\r\n                | extend dsResourceGroup = split(split(properties.dataSourceId, '/resourceGroups/')[1],'/')[0]\r\n                | extend dsSubscription = split(split(properties.dataSourceId, '/subscriptions/')[1],'/')[0]\r\n                | extend status = properties.status\r\n                | extend dataSourceId = properties.dataSourceId\r\n                | extend resourceId = tolower(dataSourceId)\r\n                | extend primaryLocation = properties.dataSourceLocation\r\n                | extend jobStatus = case (properties.status == 'Completed' or properties.status == 'CompletedWithWarnings','Succeeded',\r\n                                           properties.status == 'Failed','Failed',properties.status == 'InProgress', 'Started', properties.status)\r\n                | extend operation = case(type =~ 'microsoft.dataprotection/backupVaults/backupJobs' and tolower(properties.operationCategory) startswith 'backup' and properties.isUserTriggered == 'true',\r\n                                          strcat('adhoc',properties.operationCategory),type =~ 'microsoft.dataprotection/backupVaults/backupJobs', tolower(properties.operationCategory),\r\n                                          type =~ 'Microsoft.RecoveryServices/vaults/backupJobs' and tolower(properties.operation) startswith 'backup' and properties.isUserTriggered == 'true',strcat('adhoc',properties.operation),\r\n                                          type =~ 'Microsoft.RecoveryServices/vaults/backupJobs',tolower(properties.operation), '--')\r\n                | extend STime = todatetime(properties.startTime), ETime = todatetime(properties.endTime), duration = properties.duration\r\n                | where (dataSourceType in~ ('AzureWorkload/SQLDataBase','AzureWorkload/SAPHanaDatabase')) and (status in~ ('Started','InProgress','Succeeded','Completed','Failed','CompletedWithWarnings')) and ((ErrorDescription !contains \"Log chain is broken.\") and (ErrorDescription !contains \"Log Chain is broken.\") and (ErrorDescription !contains \"First full backup is missing for this datasource\")  and (ErrorDescription !contains \"Operation cancelled as a conflicting operation was already running on the same datasource\") and (ErrorDescription !contains \"Backup failed because a remedial backup is in progress for this datasource. Backups on this datasource will not succeed until the remedial backup is complete\"))\r\n                | where operation !contains \"adhoc\"\r\n                | where STime > ago(1d)\r\n                | summarize Total=count(status) by Scheduled = tostring(properties.status)\r\n                //| project Status = properties.status",
                          "size": 4,
                          "title": "Scheduled",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "/subscriptions/cbb944ea-aa79-4701-909a-e114ab57ad7a",
                            "/subscriptions/3a8032ca-dc2c-4137-9f64-f8daaa55c78d",
                            "/subscriptions/2df031a7-e21f-49c7-b61e-b0bb3e097c79"
                          ],
                          "visualization": "table",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Scheduled",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "contains",
                                      "thresholdValue": "Failed",
                                      "representation": "3",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "contains",
                                      "thresholdValue": "Completed",
                                      "representation": "success",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "contains",
                                      "thresholdValue": "Progress",
                                      "representation": "pending",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "contains",
                                      "thresholdValue": "Warning",
                                      "representation": "2",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "contains",
                                      "thresholdValue": "Started",
                                      "representation": "info",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "contains",
                                      "thresholdValue": "Succeeded",
                                      "representation": "1",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "success",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "Total",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "none"
                              }
                            },
                            "leftContent": {
                              "columnMatch": "Status",
                              "formatter": 18,
                              "formatOptions": {
                                "thresholdsOptions": "icons",
                                "thresholdsGrid": [
                                  {
                                    "operator": "contains",
                                    "thresholdValue": "InProgress",
                                    "representation": "pending",
                                    "text": "{0}{1}"
                                  },
                                  {
                                    "operator": "contains",
                                    "thresholdValue": "Failed",
                                    "representation": "failed",
                                    "text": "{0}{1}"
                                  },
                                  {
                                    "operator": "contains",
                                    "thresholdValue": "Completed",
                                    "representation": "success",
                                    "text": "{0}{1}"
                                  },
                                  {
                                    "operator": "Default",
                                    "thresholdValue": null,
                                    "representation": "success",
                                    "text": "{0}{1}"
                                  }
                                ]
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "showBorder": true,
                            "size": "auto"
                          },
                          "chartSettings": {
                            "seriesLabelSettings": [
                              {
                                "seriesName": "Completed",
                                "color": "greenDarkDark"
                              },
                              {
                                "seriesName": "Failed",
                                "color": "redBright"
                              }
                            ]
                          }
                        },
                        "customWidth": "20",
                        "conditionalVisibility": {
                          "parameterName": "sql",
                          "comparison": "isEqualTo",
                          "value": "n"
                        },
                        "showPin": true,
                        "name": "query - 0",
                        "styleSettings": {
                          "showBorder": true
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "recoveryservicesresources\r\n                | where type in~ ('microsoft.recoveryservices/vaults/backupjobs')\r\n                //| where properties.dataSourceType in~ ('SQLDataBase','SAPHanaDatabase')\r\n                | extend vaultName = case(type =~ 'microsoft.dataprotection/backupVaults/backupJobs', properties.vaultName,\r\n                                          type =~ 'Microsoft.RecoveryServices/vaults/backupJobs', split(split(id, '/Microsoft.RecoveryServices/vaults/')[1],'/')[0],'--')\r\n                | extend friendlyName = case(type =~ 'microsoft.dataprotection/backupVaults/backupJobs', strcat(properties.dataSourceSetName , '/', properties.dataSourceName),\r\n                                             type =~ 'Microsoft.RecoveryServices/vaults/backupJobs', properties.entityFriendlyName, '--')\r\n                | extend workloadType = tostring(case (isnotnull(properties.workloadType), properties.workloadType, properties.backupManagementType == 'AzureIaasVM', 'VM',\r\n                                                                 properties.backupManagementType == 'AzureStorage', 'AzureFileShare','--'))\r\n                | extend dataSourceType = case(type =~ 'Microsoft.RecoveryServices/vaults/backupJobs' ,strcat(properties.backupManagementType,'/',workloadType),\r\n                                               type =~ 'microsoft.dataprotection/backupVaults/backupJobs',properties.dataSourceType,'--')\r\n                | extend ErrorDescription = properties.errorDetails \r\n                | extend backupInstanceName = properties.backupInstanceId\r\n                | extend dsResourceGroup = split(split(properties.dataSourceId, '/resourceGroups/')[1],'/')[0]\r\n                | extend dsSubscription = split(split(properties.dataSourceId, '/subscriptions/')[1],'/')[0]\r\n                | extend status = properties.status\r\n                | extend dataSourceId = properties.dataSourceId\r\n                | extend resourceId = tolower(dataSourceId)\r\n                | extend primaryLocation = properties.dataSourceLocation\r\n                | extend jobStatus = case (properties.status == 'Completed' or properties.status == 'CompletedWithWarnings','Succeeded',\r\n                                           properties.status == 'Failed','Failed',properties.status == 'InProgress', 'Started', properties.status)\r\n                | extend operation = case(type =~ 'microsoft.dataprotection/backupVaults/backupJobs' and tolower(properties.operationCategory) startswith 'backup' and properties.isUserTriggered == 'true',\r\n                                          strcat('adhoc',properties.operationCategory),type =~ 'microsoft.dataprotection/backupVaults/backupJobs', tolower(properties.operationCategory),\r\n                                          type =~ 'Microsoft.RecoveryServices/vaults/backupJobs' and tolower(properties.operation) startswith 'backup' and properties.isUserTriggered == 'true',strcat('adhoc',properties.operation),\r\n                                          type =~ 'Microsoft.RecoveryServices/vaults/backupJobs',tolower(properties.operation), '--')\r\n                | extend STime = todatetime(properties.startTime), ETime = todatetime(properties.endTime), duration = properties.duration\r\n                | where (dataSourceType in~ ('AzureWorkload/SQLDataBase','AzureWorkload/SAPHanaDatabase')) and (status in~ ('Started','InProgress','Succeeded','Completed','Failed','CompletedWithWarnings')) and ((ErrorDescription !contains \"Log chain is broken.\") and (ErrorDescription !contains \"Log Chain is broken.\") and (ErrorDescription !contains \"First full backup is missing for this datasource\")  and (ErrorDescription !contains \"Operation cancelled as a conflicting operation was already running on the same datasource\") and (ErrorDescription !contains \"Backup failed because a remedial backup is in progress for this datasource. Backups on this datasource will not succeed until the remedial backup is complete\"))\r\n                | where operation contains \"adhoc\"\r\n                | where STime > ago(1d)\r\n                | summarize Total=count(status) by Adhoc = tostring(properties.status)\r\n                //| project Status = properties.status",
                          "size": 4,
                          "title": "Adhoc",
                          "noDataMessage": "No manual backups triggered.",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "/subscriptions/2df031a7-e21f-49c7-b61e-b0bb3e097c79",
                            "/subscriptions/3a8032ca-dc2c-4137-9f64-f8daaa55c78d",
                            "/subscriptions/cbb944ea-aa79-4701-909a-e114ab57ad7a"
                          ],
                          "visualization": "table",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Adhoc",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "contains",
                                      "thresholdValue": "Fail",
                                      "representation": "3",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "contains",
                                      "thresholdValue": "Complete",
                                      "representation": "success",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "contains",
                                      "thresholdValue": "Progress",
                                      "representation": "pending",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "success",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "Total",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "none"
                              }
                            },
                            "leftContent": {
                              "columnMatch": "Status",
                              "formatter": 18,
                              "formatOptions": {
                                "thresholdsOptions": "icons",
                                "thresholdsGrid": [
                                  {
                                    "operator": "contains",
                                    "thresholdValue": "InProgress",
                                    "representation": "pending",
                                    "text": "{0}{1}"
                                  },
                                  {
                                    "operator": "contains",
                                    "thresholdValue": "Failed",
                                    "representation": "failed",
                                    "text": "{0}{1}"
                                  },
                                  {
                                    "operator": "contains",
                                    "thresholdValue": "Completed",
                                    "representation": "success",
                                    "text": "{0}{1}"
                                  },
                                  {
                                    "operator": "Default",
                                    "thresholdValue": null,
                                    "representation": "success",
                                    "text": "{0}{1}"
                                  }
                                ]
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "style": "decimal",
                                  "maximumFractionDigits": 2,
                                  "maximumSignificantDigits": 3
                                }
                              }
                            },
                            "showBorder": true,
                            "size": "auto"
                          },
                          "chartSettings": {
                            "seriesLabelSettings": [
                              {
                                "seriesName": "Completed",
                                "color": "greenDarkDark"
                              },
                              {
                                "seriesName": "Failed",
                                "color": "redBright"
                              }
                            ]
                          }
                        },
                        "customWidth": "20",
                        "conditionalVisibility": {
                          "parameterName": "sql",
                          "comparison": "isEqualTo",
                          "value": "No"
                        },
                        "showPin": true,
                        "name": "query - 0 - Copy",
                        "styleSettings": {
                          "showBorder": true
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "recoveryservicesresources\r\n                | where type in~ ('microsoft.recoveryservices/vaults/backupjobs')\r\n                //| where properties.dataSourceType in~ ('SQLDataBase','SAPHanaDatabase')\r\n                | extend vaultName = case(type =~ 'microsoft.dataprotection/backupVaults/backupJobs', properties.vaultName,\r\n                                          type =~ 'Microsoft.RecoveryServices/vaults/backupJobs', split(split(id, '/Microsoft.RecoveryServices/vaults/')[1],'/')[0],'--')\r\n                | extend friendlyName = case(type =~ 'microsoft.dataprotection/backupVaults/backupJobs', strcat(properties.dataSourceSetName , '/', properties.dataSourceName),\r\n                                             type =~ 'Microsoft.RecoveryServices/vaults/backupJobs', properties.entityFriendlyName, '--')\r\n                | extend workloadType = tostring(case (isnotnull(properties.workloadType), properties.workloadType, properties.backupManagementType == 'AzureIaasVM', 'VM',\r\n                                                                 properties.backupManagementType == 'AzureStorage', 'AzureFileShare','--'))\r\n                | extend DataSourceType = case(type =~ 'Microsoft.RecoveryServices/vaults/backupJobs' ,strcat(properties.backupManagementType,'/',workloadType),\r\n                                               type =~ 'microsoft.dataprotection/backupVaults/backupJobs',properties.dataSourceType,'--')\r\n                | extend ErrorDescription = properties.errorDetails                     \r\n                | extend backupInstanceName = properties.backupInstanceId\r\n                | extend dsResourceGroup = split(split(properties.dataSourceId, '/resourceGroups/')[1],'/')[0]\r\n                | extend dsSubscription = split(split(properties.dataSourceId, '/subscriptions/')[1],'/')[0]\r\n                | extend Status = properties.status\r\n                | extend dataSourceId = properties.dataSourceId\r\n                | extend resourceId = tolower(dataSourceId)\r\n                | extend primaryLocation = properties.dataSourceLocation\r\n                | extend jobStatus = case (properties.status == 'Completed' or properties.status == 'CompletedWithWarnings','Succeeded',\r\n                                           properties.status == 'Failed','Failed',properties.status == 'InProgress', 'Started', properties.status)\r\n                | extend Operation = case(type =~ 'microsoft.dataprotection/backupVaults/backupJobs' and tolower(properties.operationCategory) startswith 'backup' and properties.isUserTriggered == 'true',\r\n                                          strcat('adhoc',properties.operationCategory),type =~ 'microsoft.dataprotection/backupVaults/backupJobs', tolower(properties.operationCategory),\r\n                                          type =~ 'Microsoft.RecoveryServices/vaults/backupJobs' and tolower(properties.operation) startswith 'backup' and properties.isUserTriggered == 'true',strcat('adhoc',properties.operation), \r\n                                          type =~ 'Microsoft.RecoveryServices/vaults/backupJobs',tolower(properties.operation), '--')\r\n                | extend StartDate = todatetime(properties.startTime), EndDate = todatetime(properties.endTime), Duration = properties.duration\r\n                | where (DataSourceType in~ ('AzureWorkload/SQLDataBase','AzureWorkload/SAPHanaDatabase')) and (Status in~ ('Started','InProgress','Succeeded','Completed','Failed','CompletedWithWarnings')) \r\n                //| where STime > ago(1d)\r\n                //| summarize Total=count(status) by Status = tostring(properties.status)\r\n                | project resourceId, BackupItems = friendlyName, DataSourceType, Status, Operation, ErrorDescription, StartDate, EndDate, Duration //dsResourceGroup,\r\n                | sort by StartDate desc\r\n             ",
                          "size": 0,
                          "title": "Backup Jobs",
                          "showRefreshButton": true,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "/subscriptions/2df031a7-e21f-49c7-b61e-b0bb3e097c79",
                            "/subscriptions/3a8032ca-dc2c-4137-9f64-f8daaa55c78d",
                            "/subscriptions/cbb944ea-aa79-4701-909a-e114ab57ad7a"
                          ],
                          "gridSettings": {
                            "rowLimit": 2000,
                            "filter": true
                          }
                        },
                        "customWidth": "100",
                        "showPin": false,
                        "name": "Backup Jobs",
                        "styleSettings": {
                          "padding": "100",
                          "maxWidth": "100",
                          "showBorder": true
                        }
                      }
                    ]
                  },
                  "customWidth": "100",
                  "name": "Health Status",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "RecoveryServicesResources\r\n                | where type in~ ('Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems')\r\n                | extend policy = properties.policyInfo.policyId\r\n                | extend vaultName = case(type in~ ('microsoft.dataprotection/backupVaults/backupInstances', 'microsoft.dataprotection/backupVaults/deletedBackupInstances'),split(split(id, '/Microsoft.DataProtection/          backupVaults/')[1],'/')[0],type =~ 'Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems',split(split(id, '/Microsoft.RecoveryServices/vaults/')[1],'/')[0],'--')\r\n                | extend dataSourceType = case(type =~ 'Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems',strcat(properties.backupManagementType,'/',properties.workloadType),type in~ ('microsoft.dataprotection/backupVaults/backupInstances', 'microsoft.dataprotection/backupVaults/deletedBackupInstances'),properties.dataSourceInfo.datasourceType,'--')\r\n                | extend DatabaseName = properties.friendlyName| extend dsResourceGroup = split(split(properties.dataSourceInfo.resourceID, '/resourceGroups/')[1],'/')[0]\r\n                | extend dsSubscription = split(split(properties.dataSourceInfo.resourceID, '/subscriptions/')[1],'/')[0]\r\n                | extend lastRestorePoint = properties.lastRecoveryPoint\r\n                | extend primaryLocation = properties.dataSourceInfo.resourceLocation\r\n                | extend InstanceOrAOAG = case(isnotnull(properties.serverName),strcat(properties.serverName,'/', properties.parentName), 'NA')\r\n                | extend policyName = case(type in~ ('microsoft.dataprotection/backupVaults/backupInstances', 'microsoft.dataprotection/backupVaults/deletedBackupInstances'), extract(@'([^/]*)/backupPolicies/([^/]*)', 2, tostring(policy)),type =~ 'Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems', properties.policyInfo.name,'--')\r\n                | extend Status = case(properties.currentProtectionState =~ \"ProtectionStopped\", 'Stopped',\r\n                                    properties.currentProtectionState =~ \"ProtectionConfigured\", 'Configured',\r\n                                    properties.currentProtectionState =~ \"ConfiguringProtectionFailed\", 'Failed',\r\n                                    properties.currentProtectionState =~ \"ConfiguringProtection\", 'Configuring',\r\n                                    properties.currentProtectionState =~ \"BackupsSuspended\", 'Suspended',\r\n                                    properties.currentProtectionState =~ \"SoftDeleted\", 'Deleted',\r\n                                    properties.currentProtectionState =~ \"ProtectionError\", 'Error',\r\n                                    \"--\")\r\n                //| extend ProtectionState = case(properties.currentProtectionState =~ \"ProtectionStopped\", 'Stopped',\r\n                //                    properties.currentProtectionState =~ \"ProtectionConfigured\", 'Configured',\r\n                //                    \"--\")\r\n                | extend Subscription = case(subscriptionId =~ \"2df031a7-e21f-49c7-b61e-b0bb3e097c79\", 'vestas-sap-ea-westeurope-dev-01',\r\n                                    subscriptionId =~ \"3a8032ca-dc2c-4137-9f64-f8daaa55c78d\", 'vestas-sap-ea-westeurope-prd-01',\r\n                                    subscriptionId =~ \"cbb944ea-aa79-4701-909a-e114ab57ad7a\", 'vestas-sap-ea-westeurope-tst-01',\r\n                                    \"--\")\r\n                | extend DBType = case(InstanceOrAOAG contains \"AG.\", 'Always on AG',\r\n                                    (InstanceOrAOAG contains \"DB\") or (InstanceOrAOAG contains \"azsapd003\") or (InstanceOrAOAG contains \"azsapd007\") or (InstanceOrAOAG contains \"azsapddb04\") or (InstanceOrAOAG contains \"azsapddb07\") or (InstanceOrAOAG contains \"azsapd035\") or (InstanceOrAOAG contains \"azsapd039\") or (InstanceOrAOAG contains \"azsapd041\"), 'Standalone Instance',\r\n                                    \"--\")\r\n               // | extend DBType = case(isnull(dsResourceGroup), 'Always on AG',\r\n               //                     isnotnull(dsResourceGroup), 'Standalone Instance',\r\n               //                     \"--\")\r\n               //| where (Status in~ ('Configured','Stopped')\r\n               | where dataSourceType in~ ('AzureWorkload/SQLDataBase')\r\n               | project DatabaseName, InstanceOrAOAG, DBType, Status, policyName, dsResourceGroup, Subscription //, dataSourceType\r\n                //| project id, name,type, resourceGroup, vaultName, DatabaseName, InstanceOrAOAG, Subscription, dataSourceType, protectionState, policyName, primaryLocation, lastRestorePoint, properties, dsResourceGroup, dsSubscription, location\r\n                | summarize Total=count(InstanceOrAOAG) by tostring(Status) //= tostring(properties.currentProtectionState)",
                          "size": 4,
                          "title": "SQL Backup Instance",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "/subscriptions/cbb944ea-aa79-4701-909a-e114ab57ad7a",
                            "/subscriptions/3a8032ca-dc2c-4137-9f64-f8daaa55c78d",
                            "/subscriptions/2df031a7-e21f-49c7-b61e-b0bb3e097c79"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Status",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "contains",
                                      "thresholdValue": "Stopped",
                                      "representation": "disabled",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "contains",
                                      "thresholdValue": "Configured",
                                      "representation": "success",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "contains",
                                      "thresholdValue": "Failed",
                                      "representation": "4",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "contains",
                                      "thresholdValue": "Configuring",
                                      "representation": "pending",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "contains",
                                      "thresholdValue": "Suspended",
                                      "representation": "warning",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "contains",
                                      "thresholdValue": "Deleted",
                                      "representation": "Cancelled",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "contains",
                                      "thresholdValue": "Error",
                                      "representation": "error",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "success",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        "customWidth": "20",
                        "conditionalVisibility": {
                          "parameterName": "sql",
                          "comparison": "isEqualTo",
                          "value": "n"
                        },
                        "showPin": true,
                        "name": "Backup Instance",
                        "styleSettings": {
                          "margin": "0",
                          "padding": "0",
                          "showBorder": true
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "RecoveryServicesResources\r\n                | where type in~ ('Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems')\r\n                | extend policy = properties.policyInfo.policyId\r\n                | extend vaultName = case(type in~ ('microsoft.dataprotection/backupVaults/backupInstances', 'microsoft.dataprotection/backupVaults/deletedBackupInstances'),split(split(id, '/Microsoft.DataProtection/          backupVaults/')[1],'/')[0],type =~ 'Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems',split(split(id, '/Microsoft.RecoveryServices/vaults/')[1],'/')[0],'--')\r\n                | extend dataSourceType = case(type =~ 'Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems',strcat(properties.backupManagementType,'/',properties.workloadType),type in~ ('microsoft.dataprotection/backupVaults/backupInstances', 'microsoft.dataprotection/backupVaults/deletedBackupInstances'),properties.dataSourceInfo.datasourceType,'--')\r\n                | extend DatabaseName = properties.friendlyName| extend dsResourceGroup = split(split(properties.dataSourceInfo.resourceID, '/resourceGroups/')[1],'/')[0]\r\n                | extend dsSubscription = split(split(properties.dataSourceInfo.resourceID, '/subscriptions/')[1],'/')[0]\r\n                | extend lastRestorePoint = properties.lastRecoveryPoint\r\n                | extend primaryLocation = properties.dataSourceInfo.resourceLocation\r\n                | extend InstanceOrAOAG = case(isnotnull(properties.serverName),strcat(properties.serverName,'/', properties.parentName), 'NA')\r\n                | extend policyName = case(type in~ ('microsoft.dataprotection/backupVaults/backupInstances', 'microsoft.dataprotection/backupVaults/deletedBackupInstances'), extract(@'([^/]*)/backupPolicies/([^/]*)', 2, tostring(policy)),type =~ 'Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems', properties.policyInfo.name,'--')\r\n                | extend protectionState = properties.currentProtectionState\r\n                | extend Subscription = case(subscriptionId =~ \"2df031a7-e21f-49c7-b61e-b0bb3e097c79\", 'vestas-sap-ea-westeurope-dev-01',\r\n                                    subscriptionId =~ \"3a8032ca-dc2c-4137-9f64-f8daaa55c78d\", 'vestas-sap-ea-westeurope-prd-01',\r\n                                    subscriptionId =~ \"cbb944ea-aa79-4701-909a-e114ab57ad7a\", 'vestas-sap-ea-westeurope-tst-01',\r\n                                    \"--\")\r\n                  | extend DBType = case(InstanceOrAOAG contains \"AG.\", 'Always on AG',\r\n                                    (InstanceOrAOAG contains \"DB\") or (InstanceOrAOAG contains \"azsapd003\") or (InstanceOrAOAG contains \"azsapd007\") or (InstanceOrAOAG contains \"azsapddb04\") or (InstanceOrAOAG contains \"azsapddb07\") or (InstanceOrAOAG contains \"azsapd035\"), 'Standalone Instance',\r\n                                    \"--\")\r\n               // | extend DBType = case(isnull(dsResourceGroup), 'Always on AG',\r\n               //                     isnotnull(dsResourceGroup), 'Standalone Instance',\r\n               //                     \"--\")\r\n                | where (protectionState in~ ('ConfiguringProtection','ProtectionConfigured','ConfiguringProtectionFailed','ProtectionStopped','BackupsSuspended','SoftDeleted','ProtectionError')) and (dataSourceType in~ ('AzureWorkload/SQLDataBase'))\r\n                | project DatabaseName, InstanceOrAOAG, DBType, protectionState, policyName, dsResourceGroup, Subscription, properties.lastBackupTime  //, dataSourceType,lastRestorePoint,\r\n                //| project id, name,type, resourceGroup, vaultName, DatabaseName, InstanceOrAOAG, Subscription, dataSourceType, protectionState, policyName, primaryLocation, lastRestorePoint, properties, dsResourceGroup, dsSubscription, location\r\n                | sort by tostring(protectionState)",
                          "size": 0,
                          "title": "SQL Protection Status",
                          "showRefreshButton": true,
                          "showExportToExcel": true,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "/subscriptions/cbb944ea-aa79-4701-909a-e114ab57ad7a",
                            "/subscriptions/3a8032ca-dc2c-4137-9f64-f8daaa55c78d",
                            "/subscriptions/2df031a7-e21f-49c7-b61e-b0bb3e097c79"
                          ],
                          "gridSettings": {
                            "filter": true
                          }
                        },
                        "customWidth": "80",
                        "name": "query - 4",
                        "styleSettings": {
                          "showBorder": true
                        }
                      }
                    ]
                  },
                  "name": "SQL Protection State"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "RecoveryServicesResources\r\n                | where type in~ ('Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems')\r\n                |extend policy = properties.policyInfo.policyId| extend vaultName = case(type in~ ('microsoft.dataprotection/backupVaults/backupInstances', 'microsoft.dataprotection/backupVaults/deletedBackupInstances'),split(split(id, '/Microsoft.DataProtection/backupVaults/')[1],'/')[0],type =~ 'Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems',split(split(id, '/Microsoft.RecoveryServices/vaults/')[1],'/')[0],'--')\r\n                | extend dataSourceType = case(type =~ 'Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems',strcat(properties.backupManagementType,'/',properties.workloadType),type in~ ('microsoft.dataprotection/backupVaults/backupInstances', 'microsoft.dataprotection/backupVaults/deletedBackupInstances'),properties.dataSourceInfo.datasourceType,'--')\r\n                | extend DatabaseName = properties.friendlyName\r\n                | extend dsResourceGroup = split(split(properties.dataSourceInfo.resourceID, '/resourceGroups/')[1],'/')[0]\r\n                | extend dsSubscription = split(split(properties.dataSourceInfo.resourceID, '/subscriptions/')[1],'/')[0]\r\n                | extend lastRestorePoint = properties.lastRecoveryPoint\r\n                | extend primaryLocation = properties.dataSourceInfo.resourceLocation\r\n                | extend instanceName = case(isnotnull(properties.serverName),strcat(properties.serverName,'/', properties.parentName), 'NA')\r\n                | extend policyName = case(type in~ ('microsoft.dataprotection/backupVaults/backupInstances', 'microsoft.dataprotection/backupVaults/deletedBackupInstances'), extract(@'([^/]*)/backupPolicies/([^/]*)', 2, tostring(policy)),type =~ 'Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems', properties.policyInfo.name,'--')\r\n                  | extend Status = case(properties.currentProtectionState =~ \"ProtectionStopped\", 'Stopped',\r\n                                    properties.currentProtectionState =~ \"ProtectionConfigured\", 'Configured',\r\n                                    properties.currentProtectionState =~ \"ConfiguringProtectionFailed\", 'Failed',\r\n                                    properties.currentProtectionState =~ \"ConfiguringProtection\", 'Configuring',\r\n                                    properties.currentProtectionState =~ \"BackupsSuspended\", 'Suspended',\r\n                                    properties.currentProtectionState =~ \"SoftDeleted\", 'Deleted',\r\n                                    properties.currentProtectionState =~ \"ProtectionError\", 'Error',\r\n                                    \"--\")\r\n                | extend Subscription = case(subscriptionId =~ \"2df031a7-e21f-49c7-b61e-b0bb3e097c79\", 'vestas-sap-ea-westeurope-dev-01',\r\n                                    subscriptionId =~ \"3a8032ca-dc2c-4137-9f64-f8daaa55c78d\", 'vestas-sap-ea-westeurope-prd-01',\r\n                                    subscriptionId =~ \"cbb944ea-aa79-4701-909a-e114ab57ad7a\", 'vestas-sap-ea-westeurope-tst-01',\r\n                                    \"--\")\r\n                | where dataSourceType in~ ('AzureWorkload/SAPHanaDatabase','AzureWorkload/SAPHanaDBInstance')\r\n                | project DatabaseName, instanceName, Status, policyName, dsResourceGroup, Subscription\r\n                //| project id, name,type, resourceGroup, vaultName, friendlyName, instanceName, subscriptionId, dataSourceType, protectionState, policyName, primaryLocation, lastRestorePoint, properties, dsResourceGroup, dsSubscription, location\r\n                | summarize Total=count(DatabaseName) by tostring(Status)",
                          "size": 4,
                          "title": "SAP HANA Backup Instance",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "/subscriptions/2df031a7-e21f-49c7-b61e-b0bb3e097c79",
                            "/subscriptions/3a8032ca-dc2c-4137-9f64-f8daaa55c78d",
                            "/subscriptions/cbb944ea-aa79-4701-909a-e114ab57ad7a"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Status",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "contains",
                                      "thresholdValue": "Stopped",
                                      "representation": "disabled",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "contains",
                                      "thresholdValue": "Configured",
                                      "representation": "success",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "contains",
                                      "thresholdValue": "Failed",
                                      "representation": "4",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "contains",
                                      "thresholdValue": "Configuring",
                                      "representation": "pending",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "contains",
                                      "thresholdValue": "Suspended",
                                      "representation": "2",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "contains",
                                      "thresholdValue": "Deleted",
                                      "representation": "Disable",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "contains",
                                      "thresholdValue": "Error",
                                      "representation": "error",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "success",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        "customWidth": "20",
                        "conditionalVisibility": {
                          "parameterName": "sap",
                          "comparison": "isEqualTo",
                          "value": "n"
                        },
                        "showPin": true,
                        "name": "query - 1",
                        "styleSettings": {
                          "showBorder": true
                        }
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "RecoveryServicesResources\r\n                | where type in~ ('Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems')\r\n                |extend policy = properties.policyInfo.policyId| extend vaultName = case(type in~ ('microsoft.dataprotection/backupVaults/backupInstances', 'microsoft.dataprotection/backupVaults/deletedBackupInstances'),split(split(id, '/Microsoft.DataProtection/backupVaults/')[1],'/')[0],type =~ 'Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems',split(split(id, '/Microsoft.RecoveryServices/vaults/')[1],'/')[0],'--')\r\n                | extend dataSourceType = case(type =~ 'Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems',strcat(properties.backupManagementType,'/',properties.workloadType),type in~ ('microsoft.dataprotection/backupVaults/backupInstances', 'microsoft.dataprotection/backupVaults/deletedBackupInstances'),properties.dataSourceInfo.datasourceType,'--')\r\n                | extend DatabaseName = properties.friendlyName\r\n                | extend dsResourceGroup = split(split(properties.dataSourceInfo.resourceID, '/resourceGroups/')[1],'/')[0]\r\n                | extend dsSubscription = split(split(properties.dataSourceInfo.resourceID, '/subscriptions/')[1],'/')[0]\r\n                | extend lastRestorePoint = properties.lastRecoveryPoint\r\n                | extend primaryLocation = properties.dataSourceInfo.resourceLocation\r\n                | extend instanceName = case(isnotnull(properties.serverName),strcat(properties.serverName,'/', properties.parentName), 'NA')\r\n                | extend policyName = case(type in~ ('microsoft.dataprotection/backupVaults/backupInstances', 'microsoft.dataprotection/backupVaults/deletedBackupInstances'), extract(@'([^/]*)/backupPolicies/([^/]*)', 2, tostring(policy)),type =~ 'Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems', properties.policyInfo.name,'--')\r\n                | extend protectionState = properties.currentProtectionState\r\n                | extend Subscription = case(subscriptionId =~ \"2df031a7-e21f-49c7-b61e-b0bb3e097c79\", 'vestas-sap-ea-westeurope-dev-01',\r\n                                    subscriptionId =~ \"3a8032ca-dc2c-4137-9f64-f8daaa55c78d\", 'vestas-sap-ea-westeurope-prd-01',\r\n                                    subscriptionId =~ \"cbb944ea-aa79-4701-909a-e114ab57ad7a\", 'vestas-sap-ea-westeurope-tst-01',\r\n                                    \"--\")\r\n                | where (protectionState in~ ('ConfiguringProtection','ProtectionConfigured','ConfiguringProtectionFailed','ProtectionStopped','BackupsSuspended','SoftDeleted','ProtectionError')) and (dataSourceType in~ ('AzureWorkload/SAPHanaDatabase','AzureWorkload/SAPHanaDBInstance'))\r\n                | project DatabaseName, instanceName, protectionState, policyName, dsResourceGroup, Subscription\r\n                //| project id, name,type, resourceGroup, vaultName, friendlyName, instanceName, subscriptionId, dataSourceType, protectionState, policyName, primaryLocation, lastRestorePoint, properties, dsResourceGroup, dsSubscription, location\r\n                | sort by tostring(protectionState)",
                          "size": 0,
                          "title": "SAP HANA Protection Status",
                          "showRefreshButton": true,
                          "showExportToExcel": true,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "/subscriptions/cbb944ea-aa79-4701-909a-e114ab57ad7a",
                            "/subscriptions/3a8032ca-dc2c-4137-9f64-f8daaa55c78d",
                            "/subscriptions/2df031a7-e21f-49c7-b61e-b0bb3e097c79"
                          ],
                          "gridSettings": {
                            "filter": true
                          }
                        },
                        "customWidth": "60",
                        "name": "query - 0",
                        "styleSettings": {
                          "showBorder": true
                        }
                      }
                    ]
                  },
                  "name": "group - 4"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "selectedTab",
              "comparison": "isEqualTo",
              "value": "backup"
            },
            "name": "SQL Backup Health Summary"
          }
        ]
      },
      "name": "Database Backup Status"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "1f74ed9a-e3ed-498d-bd5b-f68f3836a117",
                  "version": "KqlParameterItem/1.0",
                  "name": "Subscription",
                  "label": "Subscriptions",
                  "type": 6,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "includeAll": false,
                    "showDefault": false
                  }
                },
                {
                  "id": "b616a3a3-4271-4208-b1a9-a92a78efed08",
                  "version": "KqlParameterItem/1.0",
                  "name": "ResourceGroups",
                  "label": "Resource groups",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "Resources\r\n| summarize by resourceGroup\r\n| order by resourceGroup asc\r\n| project id=resourceGroup, resourceGroup",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*"
                  },
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                },
                {
                  "id": "0e85e0e4-a7e8-4ea8-b291-e444c317843a",
                  "version": "KqlParameterItem/1.0",
                  "name": "ResourceTypes",
                  "label": "Resource types",
                  "type": 7,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "where \"*\" in ({ResourceGroups}) or resourceGroup in ({ResourceGroups})\r\n| summarize by type\r\n| project type, label=type\r\n",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*"
                  },
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                },
                {
                  "id": "f60ea0a0-3703-44ca-a59b-df0246423f41",
                  "version": "KqlParameterItem/1.0",
                  "name": "Resources",
                  "type": 5,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "Resources\r\n| where \"*\" in ({ResourceTypes}) or type in~({ResourceTypes})\r\n| where '*' in~({ResourceGroups}) or resourceGroup in~({ResourceGroups}) \r\n| order by name asc\r\n| extend Rank = row_number()\r\n| project value = id, label = name, selected = Rank <= 10, group = resourceGroup",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*",
                    "defaultItemsText": "First 10"
                  },
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                },
                {
                  "id": "015d1a5e-357f-4e01-ac77-598e7b493db0",
                  "version": "KqlParameterItem/1.0",
                  "name": "timeRange",
                  "label": "Time Range",
                  "type": 4,
                  "isRequired": true,
                  "value": {
                    "durationMs": 2592000000
                  },
                  "typeSettings": {
                    "selectableValues": [
                      {
                        "durationMs": 300000
                      },
                      {
                        "durationMs": 900000
                      },
                      {
                        "durationMs": 1800000
                      },
                      {
                        "durationMs": 3600000
                      },
                      {
                        "durationMs": 14400000
                      },
                      {
                        "durationMs": 43200000
                      },
                      {
                        "durationMs": 86400000
                      },
                      {
                        "durationMs": 172800000
                      },
                      {
                        "durationMs": 259200000
                      },
                      {
                        "durationMs": 604800000
                      },
                      {
                        "durationMs": 1209600000
                      },
                      {
                        "durationMs": 2419200000
                      },
                      {
                        "durationMs": 2592000000
                      }
                    ],
                    "allowCustom": true
                  }
                },
                {
                  "id": "bd6d6075-dc8f-43d3-829f-7e2245a3eb21",
                  "version": "KqlParameterItem/1.0",
                  "name": "State",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "{\"version\":\"1.0.0\",\"content\":\"[ \\r\\n    {\\\"id\\\":\\\"New\\\", \\\"label\\\": \\\"New\\\"},\\r\\n    {\\\"id\\\":\\\"Acknowledged\\\", \\\"label\\\": \\\"Acknowledged\\\"},\\r\\n    {\\\"id\\\":\\\"Closed\\\", \\\"label\\\": \\\"Closed\\\"}\\r\\n]\",\"transformers\":null}",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "value": [
                    "New",
                    "Acknowledged"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*",
                    "showDefault": false
                  },
                  "queryType": 8
                },
                {
                  "id": "c29383f3-cb03-404f-8f6b-964f05cb9778",
                  "version": "KqlParameterItem/1.0",
                  "name": "AlertCondition",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "{\"version\":\"1.0.0\",\"content\":\"[ \\r\\n    {\\\"id\\\":\\\"Fired\\\", \\\"label\\\": \\\"Fired\\\"},\\r\\n    {\\\"id\\\":\\\"Resolved\\\", \\\"label\\\": \\\"Resolved\\\"}\\r\\n]\",\"transformers\":null}",
                  "value": [
                    "Fired"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "queryType": 8
                }
              ],
              "style": "above",
              "queryType": 8
            },
            "name": "parameters"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "template",
              "loadFromTemplateId": "Community-Workbooks/Common/noSubscriptions",
              "items": []
            },
            "conditionalVisibility": {
              "parameterName": "Subscription",
              "comparison": "isEqualTo"
            },
            "name": "no subscriptions"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "AlertsManagementResources | where type =~ 'microsoft.alertsmanagement/alerts'\r\n| where todatetime(properties.essentials.startDateTime) {timeRange}  \r\n| where \"*\" in ({ResourceGroups}) or properties.essentials.targetResourceGroup in~ ({ResourceGroups})\r\n| where \"*\" in ({ResourceTypes}) or properties.essentials.targetResourceType in~ ({ResourceTypes})\r\n| where \"*\" in ({Resources}) or properties.essentials.targetResource in~ ({Resources})\r\n| where \"*\" in ({AlertCondition}) or properties.essentials.monitorCondition in~ ({AlertCondition})\r\n| extend State=tostring(properties.essentials.alertState)\r\n| where \"*\" in ({State}) or State in ({State})\r\n| summarize Count=count(), New=countif(State==\"New\"), \r\nAcknowledged=countif(State==\"Acknowledged\"), \r\nClosed=countif(State==\"Closed\") \r\nby Severity=tostring(properties.essentials.severity)\r\n| order by Severity asc",
                    "size": 3,
                    "title": "Alert Summary",
                    "noDataMessage": "No alerts found",
                    "exportMultipleValues": true,
                    "exportedParameters": [
                      {
                        "fieldName": "Severity",
                        "parameterName": "Severity",
                        "parameterType": 1
                      }
                    ],
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Severity",
                          "formatter": 11
                        },
                        {
                          "columnMatch": "Count",
                          "formatter": 3,
                          "formatOptions": {
                            "min": 0,
                            "palette": "blue",
                            "aggregation": "Sum"
                          },
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "style": "decimal",
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        {
                          "columnMatch": "State",
                          "formatter": 1
                        }
                      ]
                    }
                  },
                  "showPin": true,
                  "name": "Alert Summary"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "💡 Select one or more severities to see more information."
                  },
                  "conditionalVisibility": {
                    "parameterName": "Severity",
                    "comparison": "isEqualTo"
                  },
                  "name": "click to select info"
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "tabs",
                    "links": [
                      {
                        "id": "a9737bf7-64c6-4ebf-b605-1944829c39fc",
                        "cellValue": "tab",
                        "linkTarget": "parameter",
                        "linkLabel": "Alert Details",
                        "subTarget": "details",
                        "style": "link"
                      },
                      {
                        "id": "4c36bb6b-5d64-4e22-b36e-6961f9ba76b2",
                        "cellValue": "tab",
                        "linkTarget": "parameter",
                        "linkLabel": "Alerts by Region",
                        "subTarget": "location",
                        "style": "link"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "Severity",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "tabs"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "AlertsManagementResources | where type =~ 'microsoft.alertsmanagement/alerts'\r\n| where (properties.context.sourceType in~ (\"SQLDataBase\", \"SAPHanaDatabase\")) or (name contains \"[Linux] Aplication disk is running out of space\") or (name contains \"[Windows] Aplication disk is running out of space\") or (name contains \"Warning High CPU Utilization\") or (name contains \"Warning Virtual Memory Utilization is High\") or (name contains \"VM is not responding\") or (name contains \"[SQL] Database Corruption Detection\")\r\n//| where properties.context.sourceType in~ (\"SQLDataBase\", \"SAPHanaDatabase\")\r\n| where todatetime(properties.essentials.startDateTime) {timeRange}\r\n//| where properties.essentials.description !in (\"Log chain is broken.\",\"Log Chain is broken.\",\"First full backup is missing for this datasource.\")  \r\n| where \"*\" in ({ResourceGroups}) or properties.essentials.targetResourceGroup in~ ({ResourceGroups})\r\n| where \"*\" in ({ResourceTypes}) or properties.essentials.targetResourceType in~ ({ResourceTypes})\r\n| where \"*\" in ({Resources}) or properties.essentials.targetResource in~ ({Resources})\r\n| where \"*\" in ({AlertCondition}) or properties.essentials.monitorCondition in~ ({AlertCondition})\r\n//| where (properties.essentials.description !contains \"SQL database does not exist\")\r\n| where (properties.essentials.description !contains \"Log chain is broken\")\r\n| where (properties.essentials.description !contains \"Failed to connect to HANA system\")\r\n| where (properties.essentials.description !contains \"First full backup is missing for this datasource\")\r\n| where (properties.essentials.description !contains  \"Operation cancelled as a conflicting operation was already running on the same datasource\")\r\n| where (properties.essentials.description !contains  \"Backup failed because a remedial backup is in progress for this datasource. Backups on this datasource will not succeed until the remedial backup is complete\")\r\n//| where (properties.essentials.description !contains  \"Operation failed because Azure Backup workload extension could not connect to required Azure endpoints due to DNS resolution failures\")\r\n| extend State=tostring(properties.essentials.alertState)\r\n| where \"*\" in ({State}) or State in ({State})\r\n| extend Computer = properties.context.context.condition.allOf[0].dimensions[0].value\r\n| extend AffectedServer1 = properties.context.affectedItems\r\n//| where AffectedServer has \"azsapddb05\"\r\n| parse AffectedServer1 with * \"virtualMachines/\" AffectedServer1 \"/\" *\r\n| extend AffectedServer = coalesce(AffectedServer1, Computer)\r\n| where (AffectedServer contains \"db\") or (AffectedServer in~ (\"azsapd003\",\"azsapd007\",\"azsapd035\",\"azsapd039\",\"azsapd041\",\"dkcdcsapp076\",\"dkcdcsapd082\",\"\"))\r\n| summarize Count=count(), New=countif(State==\"New\"), \r\nAcknowledged=countif(State==\"Acknowledged\"), \r\nClosed=countif(State==\"Closed\") \r\nby Severity=tostring(properties.essentials.severity)\r\n| order by Severity asc\r\n//| summarize count() by State=tostring(properties.essentials.alertState)",
                    "size": 4,
                    "title": "Alerts Summary",
                    "color": "redBright",
                    "noDataMessage": "No alerts found",
                    "noDataMessageStyle": 3,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "piechart",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "AlertId",
                          "formatter": 5,
                          "formatOptions": {
                            "linkTarget": "Resource"
                          }
                        },
                        {
                          "columnMatch": "StartTime",
                          "formatter": 6
                        },
                        {
                          "columnMatch": "Severity",
                          "formatter": 11
                        },
                        {
                          "columnMatch": "State",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "Name",
                          "formatter": 1,
                          "formatOptions": {
                            "linkTarget": "OpenBlade",
                            "linkIsContextBlade": true,
                            "bladeOpenContext": {
                              "bladeName": "AlertDetailsTemplateBlade",
                              "extensionName": "Microsoft_Azure_Monitoring",
                              "bladeParameters": [
                                {
                                  "name": "alertId",
                                  "source": "column",
                                  "value": "AlertId"
                                },
                                {
                                  "name": "alertName",
                                  "source": "column",
                                  "value": "Name"
                                },
                                {
                                  "name": "invokedFrom",
                                  "source": "static",
                                  "value": "Workbooks"
                                }
                              ]
                            }
                          },
                          "tooltipFormat": {
                            "tooltip": "View alert details"
                          }
                        },
                        {
                          "columnMatch": "TargetResource",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "subTarget": "alerts",
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "essentials",
                          "formatter": 5,
                          "formatOptions": {
                            "linkTarget": "CellDetails",
                            "linkIsContextBlade": true
                          }
                        }
                      ],
                      "rowLimit": 1000
                    },
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "Severity",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "Count",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "coldHot"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal",
                            "maximumFractionDigits": 2,
                            "maximumSignificantDigits": 3
                          }
                        }
                      },
                      "showBorder": true,
                      "sortCriteriaField": "Severity",
                      "sortOrderField": 1,
                      "size": "auto"
                    },
                    "graphSettings": {
                      "type": 0,
                      "topContent": {
                        "columnMatch": "Severity",
                        "formatter": 1
                      },
                      "centerContent": {
                        "columnMatch": "Count",
                        "formatter": 1,
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "maximumSignificantDigits": 3,
                            "maximumFractionDigits": 2
                          }
                        }
                      }
                    },
                    "chartSettings": {
                      "showMetrics": false,
                      "seriesLabelSettings": [
                        {
                          "seriesName": "Sev3",
                          "color": "blue"
                        },
                        {
                          "seriesName": "Sev0",
                          "color": "red"
                        },
                        {
                          "seriesName": "Sev1",
                          "color": "orange"
                        },
                        {
                          "seriesName": "Sev2",
                          "color": "yellow"
                        },
                        {
                          "seriesName": "Sev4",
                          "color": "blueDark"
                        }
                      ]
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "Severity",
                      "comparison": "isNotEqualTo"
                    },
                    {
                      "parameterName": "tab",
                      "comparison": "isEqualTo",
                      "value": "details"
                    }
                  ],
                  "showPin": true,
                  "name": "Alerts Summary"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "AlertsManagementResources | where type =~ 'microsoft.alertsmanagement/alerts'\r\n| where (properties.context.sourceType in~ (\"SQLDataBase\", \"SAPHanaDatabase\")) or (name contains \"[Linux] Aplication disk is running out of space\") or (name contains \"[Windows] Aplication disk is running out of space\") or (name contains \"Warning High CPU Utilization\") or (name contains \"Warning Virtual Memory Utilization is High\") or (name contains \"VM is not responding\") or (name contains \"[SQL] Database Corruption Detection\")\r\n//| where name contains \"Warning Virtual Memory Utilization is High\"\r\n| where todatetime(properties.essentials.startDateTime) {timeRange}  \r\n| extend Severity=tostring(properties.essentials.severity)\r\n| where Severity in ({Severity}) or Severity contains \"Sev\"\r\n| extend State=tostring(properties.essentials.alertState)\r\n| where \"*\" in ({State}) or State in ({State})\r\n| where \"*\" in ({ResourceTypes}) or properties.essentials.targetResourceType in~ ({ResourceTypes})\r\n| where \"*\" in ({ResourceGroups}) or properties.essentials.targetResourceGroup in~ ({ResourceGroups})\r\n| where \"*\" in ({Resources}) or properties.essentials.targetResource in~ ({Resources})\r\n| where \"*\" in ({AlertCondition}) or properties.essentials.monitorCondition in~ ({AlertCondition})\r\n//| where (properties.essentials.description !contains \"SQL database does not exist\")\r\n| where (properties.essentials.description !contains \"Log chain is broken\")\r\n| where (properties.essentials.description !contains \"Failed to connect to HANA system\")\r\n| where (properties.essentials.description !contains \"First full backup is missing for this datasource\")\r\n| where (properties.essentials.description !contains  \"Operation cancelled as a conflicting operation was already running on the same datasource\")\r\n| where (properties.essentials.description !contains  \"Backup failed because a remedial backup is in progress for this datasource. Backups on this datasource will not succeed until the remedial backup is complete\")\r\n//| where (properties.essentials.description !contains  \"Operation failed because Azure Backup workload extension could not connect to required Azure endpoints due to DNS resolution failures\")\r\n| extend Computer = properties.context.context.condition.allOf[0].dimensions[0].value\r\n| extend AffectedServer1 = properties.context.affectedItems\r\n//| where AffectedServer has \"azsapddb05\"\r\n| parse AffectedServer1 with * \"virtualMachines/\" AffectedServer1 \"/\" *\r\n| project AlertId=id, StartTime=todatetime(tostring(properties.essentials.startDateTime)), Severity, State=tostring(properties.essentials.alertState), AlertName=name, AffectedServer = coalesce(AffectedServer1, Computer), Description=tostring(properties.essentials.description)\r\n| where (AffectedServer contains \"db\") or (AffectedServer in~ (\"azsapd003\",\"azsapd007\",\"azsapd035\",\"azsapd039\",\"azsapd041\",\"dkcdcsapp076\",\"dkcdcsapd082\",\"\"))\r\n| order by StartTime desc\r\n",
                    "size": 0,
                    "title": "Active Alerts",
                    "noDataMessage": "No alerts found",
                    "noDataMessageStyle": 3,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "AlertId",
                          "formatter": 5,
                          "formatOptions": {
                            "linkTarget": "Resource"
                          }
                        },
                        {
                          "columnMatch": "StartTime",
                          "formatter": 6
                        },
                        {
                          "columnMatch": "Severity",
                          "formatter": 11
                        },
                        {
                          "columnMatch": "State",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "Name",
                          "formatter": 1,
                          "formatOptions": {
                            "linkTarget": "OpenBlade",
                            "linkIsContextBlade": true,
                            "bladeOpenContext": {
                              "bladeName": "AlertDetailsTemplateBlade",
                              "extensionName": "Microsoft_Azure_Monitoring",
                              "bladeParameters": [
                                {
                                  "name": "alertId",
                                  "source": "column",
                                  "value": "AlertId"
                                },
                                {
                                  "name": "alertName",
                                  "source": "column",
                                  "value": "Name"
                                },
                                {
                                  "name": "invokedFrom",
                                  "source": "static",
                                  "value": "Workbooks"
                                }
                              ]
                            }
                          },
                          "tooltipFormat": {
                            "tooltip": "View alert details"
                          }
                        },
                        {
                          "columnMatch": "TargetResource",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "subTarget": "alerts",
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "essentials",
                          "formatter": 5,
                          "formatOptions": {
                            "linkTarget": "CellDetails",
                            "linkIsContextBlade": true
                          }
                        }
                      ],
                      "rowLimit": 1000,
                      "filter": true
                    }
                  },
                  "customWidth": "70",
                  "conditionalVisibilities": [
                    {
                      "parameterName": "Severity",
                      "comparison": "isNotEqualTo"
                    },
                    {
                      "parameterName": "tab",
                      "comparison": "isEqualTo",
                      "value": "details"
                    }
                  ],
                  "showPin": true,
                  "name": "Alerts for severity"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "AlertsManagementResources | where type =~ 'microsoft.alertsmanagement/alerts'\r\n| where todatetime(properties.essentials.startDateTime) {timeRange}  \r\n| extend Severity=tostring(properties.essentials.severity)\r\n| where Severity in ({Severity})\r\n| extend State=tostring(properties.essentials.alertState)\r\n| where \"*\" in ({State}) or State in ({State})\r\n| where \"*\" in ({ResourceTypes}) or properties.essentials.targetResourceType in~ ({ResourceTypes})\r\n| where \"*\" in ({ResourceGroups}) or properties.essentials.targetResourceGroup in~ ({ResourceGroups})\r\n| where \"*\" in ({Resources}) or properties.essentials.targetResource in~ ({Resources})\r\n| summarize Alerts=count(), New=countif(State==\"New\"), \r\nAcknowledged=countif(State==\"Acknowledged\"), \r\nClosed=countif(State==\"Closed\")\r\nby Resource=tostring(properties.essentials.targetResource )\r\n| order by Alerts desc\r\n",
                    "size": 0,
                    "title": "{Severity} Alerts by Region",
                    "noDataMessage": "No alerts found",
                    "exportMultipleValues": true,
                    "exportAggregateParts": true,
                    "exportedParameters": [
                      {
                        "parameterName": "Selected",
                        "parameterType": 1,
                        "quote": ""
                      }
                    ],
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "map",
                    "gridSettings": {
                      "rowLimit": 1000
                    },
                    "mapSettings": {
                      "locInfo": "AzureResource",
                      "locInfoColumn": "Resource",
                      "sizeSettings": "Alerts",
                      "sizeAggregation": "Sum",
                      "defaultSize": 0,
                      "legendMetric": "Alerts",
                      "legendAggregation": "Sum",
                      "itemColorSettings": {
                        "nodeColorField": "Alerts",
                        "colorAggregation": "Sum",
                        "type": "heatmap",
                        "heatmapPalette": "greenRed"
                      }
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "Severity",
                      "comparison": "isNotEqualTo"
                    },
                    {
                      "parameterName": "tab",
                      "comparison": "isEqualTo",
                      "value": "location"
                    }
                  ],
                  "showPin": true,
                  "name": "Alerts map"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "💡 Select one or more regions to see Azure resources with alerts in those regions."
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "Selected",
                      "comparison": "isEqualTo"
                    },
                    {
                      "parameterName": "tab",
                      "comparison": "isEqualTo",
                      "value": "location"
                    },
                    {
                      "parameterName": "Severity",
                      "comparison": "isNotEqualTo"
                    }
                  ],
                  "name": "map selection text"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "Subscription",
              "comparison": "isNotEqualTo"
            },
            "name": "visible if subscriptions selected"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "alert"
      },
      "name": "Active DB Alerts"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "1f74ed9a-e3ed-498d-bd5b-f68f3836a117",
                  "version": "KqlParameterItem/1.0",
                  "name": "Subscription",
                  "label": "Subscriptions",
                  "type": 6,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "includeAll": false,
                    "showDefault": false
                  }
                },
                {
                  "id": "b616a3a3-4271-4208-b1a9-a92a78efed08",
                  "version": "KqlParameterItem/1.0",
                  "name": "ResourceGroups",
                  "label": "Resource groups",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "Resources\r\n| summarize by resourceGroup\r\n| order by resourceGroup asc\r\n| project id=resourceGroup, resourceGroup",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*"
                  },
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                },
                {
                  "id": "0e85e0e4-a7e8-4ea8-b291-e444c317843a",
                  "version": "KqlParameterItem/1.0",
                  "name": "ResourceTypes",
                  "label": "Resource types",
                  "type": 7,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "where \"*\" in ({ResourceGroups}) or resourceGroup in ({ResourceGroups})\r\n| summarize by type\r\n| project type, label=type\r\n",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*"
                  },
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                },
                {
                  "id": "f60ea0a0-3703-44ca-a59b-df0246423f41",
                  "version": "KqlParameterItem/1.0",
                  "name": "Resources",
                  "type": 5,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "Resources\r\n| where \"*\" in ({ResourceTypes}) or type in~({ResourceTypes})\r\n| where '*' in~({ResourceGroups}) or resourceGroup in~({ResourceGroups}) \r\n| order by name asc\r\n| extend Rank = row_number()\r\n| project value = id, label = name, selected = Rank <= 10, group = resourceGroup",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*",
                    "defaultItemsText": "First 10"
                  },
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                },
                {
                  "id": "015d1a5e-357f-4e01-ac77-598e7b493db0",
                  "version": "KqlParameterItem/1.0",
                  "name": "timeRange",
                  "label": "Time Range",
                  "type": 4,
                  "isRequired": true,
                  "value": {
                    "durationMs": 2592000000
                  },
                  "typeSettings": {
                    "selectableValues": [
                      {
                        "durationMs": 300000
                      },
                      {
                        "durationMs": 900000
                      },
                      {
                        "durationMs": 1800000
                      },
                      {
                        "durationMs": 3600000
                      },
                      {
                        "durationMs": 14400000
                      },
                      {
                        "durationMs": 43200000
                      },
                      {
                        "durationMs": 86400000
                      },
                      {
                        "durationMs": 172800000
                      },
                      {
                        "durationMs": 259200000
                      },
                      {
                        "durationMs": 604800000
                      },
                      {
                        "durationMs": 1209600000
                      },
                      {
                        "durationMs": 2419200000
                      },
                      {
                        "durationMs": 2592000000
                      }
                    ],
                    "allowCustom": true
                  }
                },
                {
                  "id": "bd6d6075-dc8f-43d3-829f-7e2245a3eb21",
                  "version": "KqlParameterItem/1.0",
                  "name": "State",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "{\"version\":\"1.0.0\",\"content\":\"[ \\r\\n    {\\\"id\\\":\\\"New\\\", \\\"label\\\": \\\"New\\\"},\\r\\n    {\\\"id\\\":\\\"Acknowledged\\\", \\\"label\\\": \\\"Acknowledged\\\"},\\r\\n    {\\\"id\\\":\\\"Closed\\\", \\\"label\\\": \\\"Closed\\\"}\\r\\n]\",\"transformers\":null}",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "value": [
                    "Closed"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*",
                    "showDefault": false
                  },
                  "queryType": 8
                },
                {
                  "id": "c29383f3-cb03-404f-8f6b-964f05cb9778",
                  "version": "KqlParameterItem/1.0",
                  "name": "AlertCondition",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "{\"version\":\"1.0.0\",\"content\":\"[ \\r\\n    {\\\"id\\\":\\\"Fired\\\", \\\"label\\\": \\\"Fired\\\"},\\r\\n    {\\\"id\\\":\\\"Resolved\\\", \\\"label\\\": \\\"Resolved\\\"}\\r\\n]\",\"transformers\":null}",
                  "value": [
                    "Fired"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "queryType": 8
                }
              ],
              "style": "above",
              "queryType": 8
            },
            "name": "parameters"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "template",
              "loadFromTemplateId": "Community-Workbooks/Common/noSubscriptions",
              "items": []
            },
            "conditionalVisibility": {
              "parameterName": "Subscription",
              "comparison": "isEqualTo"
            },
            "name": "no subscriptions"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "AlertsManagementResources | where type =~ 'microsoft.alertsmanagement/alerts'\r\n| where todatetime(properties.essentials.startDateTime) {timeRange}  \r\n| where \"*\" in ({ResourceGroups}) or properties.essentials.targetResourceGroup in~ ({ResourceGroups})\r\n| where \"*\" in ({ResourceTypes}) or properties.essentials.targetResourceType in~ ({ResourceTypes})\r\n| where \"*\" in ({Resources}) or properties.essentials.targetResource in~ ({Resources})\r\n| where \"*\" in ({AlertCondition}) or properties.essentials.monitorCondition in~ ({AlertCondition})\r\n| extend State=tostring(properties.essentials.alertState)\r\n| where \"*\" in ({State}) or State in ({State})\r\n| summarize Count=count(), New=countif(State==\"New\"), \r\nAcknowledged=countif(State==\"Acknowledged\"), \r\nClosed=countif(State==\"Closed\") \r\nby Severity=tostring(properties.essentials.severity)\r\n| order by Severity asc",
                    "size": 3,
                    "title": "Alert Summary",
                    "noDataMessage": "No alerts found",
                    "exportMultipleValues": true,
                    "exportedParameters": [
                      {
                        "fieldName": "Severity",
                        "parameterName": "Severity",
                        "parameterType": 1
                      }
                    ],
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Severity",
                          "formatter": 11
                        },
                        {
                          "columnMatch": "Count",
                          "formatter": 3,
                          "formatOptions": {
                            "min": 0,
                            "palette": "blue",
                            "aggregation": "Sum"
                          },
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "style": "decimal",
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        {
                          "columnMatch": "State",
                          "formatter": 1
                        }
                      ]
                    }
                  },
                  "showPin": true,
                  "name": "Alert Summary"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "💡 Select one or more severities to see more information."
                  },
                  "conditionalVisibility": {
                    "parameterName": "Severity",
                    "comparison": "isEqualTo"
                  },
                  "name": "click to select info"
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "tabs",
                    "links": [
                      {
                        "id": "a9737bf7-64c6-4ebf-b605-1944829c39fc",
                        "cellValue": "tab",
                        "linkTarget": "parameter",
                        "linkLabel": "Alert Details",
                        "subTarget": "details",
                        "style": "link"
                      },
                      {
                        "id": "4c36bb6b-5d64-4e22-b36e-6961f9ba76b2",
                        "cellValue": "tab",
                        "linkTarget": "parameter",
                        "linkLabel": "Alerts by Region",
                        "subTarget": "location",
                        "style": "link"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "Severity",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "tabs"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "AlertsManagementResources | where type =~ 'microsoft.alertsmanagement/alerts'\r\n| where (properties.context.sourceType in~ (\"SQLDataBase\", \"SAPHanaDatabase\")) or (name contains \"[Linux] Aplication disk is running out of space\") or (name contains \"[Windows] Aplication disk is running out of space\") or (name contains \"Warning High CPU Utilization\") or (name contains \"Warning Virtual Memory Utilization is High\") or (name contains \"VM is not responding\") or (name contains \"[SQL] Database Corruption Detection\")\r\n//| where properties.context.sourceType in~ (\"SQLDataBase\", \"SAPHanaDatabase\")\r\n| where todatetime(properties.essentials.startDateTime) {timeRange}\r\n//| where properties.essentials.description !in (\"Log chain is broken.\",\"Log Chain is broken.\",\"First full backup is missing for this datasource.\")  \r\n| where \"*\" in ({ResourceGroups}) or properties.essentials.targetResourceGroup in~ ({ResourceGroups})\r\n| where \"*\" in ({ResourceTypes}) or properties.essentials.targetResourceType in~ ({ResourceTypes})\r\n| where \"*\" in ({Resources}) or properties.essentials.targetResource in~ ({Resources})\r\n| where \"*\" in ({AlertCondition}) or properties.essentials.monitorCondition in~ ({AlertCondition})\r\n//| where (properties.essentials.description !contains \"SQL database does not exist\")\r\n| where (properties.essentials.description !contains \"Log chain is broken\")\r\n| where (properties.essentials.description !contains \"Failed to connect to HANA system\")\r\n| where (properties.essentials.description !contains \"First full backup is missing for this datasource\")\r\n| where (properties.essentials.description !contains  \"Operation cancelled as a conflicting operation was already running on the same datasource\")\r\n| where (properties.essentials.description !contains  \"Backup failed because a remedial backup is in progress for this datasource. Backups on this datasource will not succeed until the remedial backup is complete\")\r\n//| where (properties.essentials.description !contains  \"Operation failed because Azure Backup workload extension could not connect to required Azure endpoints due to DNS resolution failures\")\r\n| extend State=tostring(properties.essentials.alertState)\r\n| where \"*\" in ({State}) or State in ({State})\r\n| extend Computer = properties.context.context.condition.allOf[0].dimensions[0].value\r\n| extend AffectedServer1 = properties.context.affectedItems\r\n//| where AffectedServer has \"azsapddb05\"\r\n| parse AffectedServer1 with * \"virtualMachines/\" AffectedServer1 \"/\" *\r\n| extend AffectedServer = coalesce(AffectedServer1, Computer)\r\n| where (AffectedServer contains \"db\") or (AffectedServer in~ (\"azsapd003\",\"azsapd007\",\"azsapd035\",\"azsapd039\",\"azsapd041\",\"dkcdcsapp076\",\"dkcdcsapd082\",\"\"))\r\n| summarize Count=count(), New=countif(State==\"New\"), \r\nAcknowledged=countif(State==\"Acknowledged\"), \r\nClosed=countif(State==\"Closed\") \r\nby Severity=tostring(properties.essentials.severity)\r\n| order by Severity asc\r\n//| summarize count() by State=tostring(properties.essentials.alertState)",
                    "size": 4,
                    "title": "Alerts Summary",
                    "color": "redBright",
                    "noDataMessage": "No alerts found",
                    "noDataMessageStyle": 3,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "piechart",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "AlertId",
                          "formatter": 5,
                          "formatOptions": {
                            "linkTarget": "Resource"
                          }
                        },
                        {
                          "columnMatch": "StartTime",
                          "formatter": 6
                        },
                        {
                          "columnMatch": "Severity",
                          "formatter": 11
                        },
                        {
                          "columnMatch": "State",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "Name",
                          "formatter": 1,
                          "formatOptions": {
                            "linkTarget": "OpenBlade",
                            "linkIsContextBlade": true,
                            "bladeOpenContext": {
                              "bladeName": "AlertDetailsTemplateBlade",
                              "extensionName": "Microsoft_Azure_Monitoring",
                              "bladeParameters": [
                                {
                                  "name": "alertId",
                                  "source": "column",
                                  "value": "AlertId"
                                },
                                {
                                  "name": "alertName",
                                  "source": "column",
                                  "value": "Name"
                                },
                                {
                                  "name": "invokedFrom",
                                  "source": "static",
                                  "value": "Workbooks"
                                }
                              ]
                            }
                          },
                          "tooltipFormat": {
                            "tooltip": "View alert details"
                          }
                        },
                        {
                          "columnMatch": "TargetResource",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "subTarget": "alerts",
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "essentials",
                          "formatter": 5,
                          "formatOptions": {
                            "linkTarget": "CellDetails",
                            "linkIsContextBlade": true
                          }
                        }
                      ],
                      "rowLimit": 1000
                    },
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "Severity",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "Count",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "coldHot"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal",
                            "maximumFractionDigits": 2,
                            "maximumSignificantDigits": 3
                          }
                        }
                      },
                      "showBorder": true,
                      "sortCriteriaField": "Severity",
                      "sortOrderField": 1,
                      "size": "auto"
                    },
                    "graphSettings": {
                      "type": 0,
                      "topContent": {
                        "columnMatch": "Severity",
                        "formatter": 1
                      },
                      "centerContent": {
                        "columnMatch": "Count",
                        "formatter": 1,
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "maximumSignificantDigits": 3,
                            "maximumFractionDigits": 2
                          }
                        }
                      }
                    },
                    "chartSettings": {
                      "showMetrics": false,
                      "seriesLabelSettings": [
                        {
                          "seriesName": "Sev3",
                          "color": "blue"
                        },
                        {
                          "seriesName": "Sev0",
                          "color": "red"
                        },
                        {
                          "seriesName": "Sev1",
                          "color": "orange"
                        },
                        {
                          "seriesName": "Sev2",
                          "color": "yellow"
                        },
                        {
                          "seriesName": "Sev4",
                          "color": "blueDark"
                        }
                      ]
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "Severity",
                      "comparison": "isNotEqualTo"
                    },
                    {
                      "parameterName": "tab",
                      "comparison": "isEqualTo",
                      "value": "details"
                    },
                    {
                      "parameterName": "sql",
                      "comparison": "isEqualTo",
                      "value": "no"
                    }
                  ],
                  "showPin": true,
                  "name": "Alerts Summary"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "AlertsManagementResources | where type =~ 'microsoft.alertsmanagement/alerts'\r\n| where (properties.context.sourceType in~ (\"SQLDataBase\", \"SAPHanaDatabase\")) or (name contains \"[Linux] Aplication disk is running out of space\") or (name contains \"[Windows] Aplication disk is running out of space\") or (name contains \"Warning High CPU Utilization\") or (name contains \"Warning Virtual Memory Utilization is High\") or (name contains \"VM is not responding\") or (name contains \"[SQL] Database Corruption Detection\")\r\n//| where name contains \"Warning Virtual Memory Utilization is High\"\r\n| where todatetime(properties.essentials.startDateTime) {timeRange}  \r\n| extend Severity=tostring(properties.essentials.severity)\r\n| where Severity in ({Severity}) or Severity contains \"Sev\"\r\n| extend State=tostring(properties.essentials.alertState)\r\n| where \"*\" in ({State}) or State in ({State})\r\n| where \"*\" in ({ResourceTypes}) or properties.essentials.targetResourceType in~ ({ResourceTypes})\r\n| where \"*\" in ({ResourceGroups}) or properties.essentials.targetResourceGroup in~ ({ResourceGroups})\r\n| where \"*\" in ({Resources}) or properties.essentials.targetResource in~ ({Resources})\r\n| where \"*\" in ({AlertCondition}) or properties.essentials.monitorCondition in~ ({AlertCondition})\r\n//| where (properties.essentials.description !contains \"SQL database does not exist\")\r\n| where (properties.essentials.description !contains \"Log chain is broken\")\r\n| where (properties.essentials.description !contains \"Failed to connect to HANA system\")\r\n| where (properties.essentials.description !contains \"First full backup is missing for this datasource\")\r\n| where (properties.essentials.description !contains  \"Operation cancelled as a conflicting operation was already running on the same datasource\")\r\n| where (properties.essentials.description !contains  \"Backup failed because a remedial backup is in progress for this datasource. Backups on this datasource will not succeed until the remedial backup is complete\")\r\n//| where (properties.essentials.description !contains  \"Operation failed because Azure Backup workload extension could not connect to required Azure endpoints due to DNS resolution failures\")\r\n| extend Computer = properties.context.context.condition.allOf[0].dimensions[0].value\r\n| extend AffectedServer1 = properties.context.affectedItems\r\n//| where AffectedServer has \"azsapddb05\"\r\n| parse AffectedServer1 with * \"virtualMachines/\" AffectedServer1 \"/\" *\r\n| project AlertId=id, StartTime=todatetime(tostring(properties.essentials.startDateTime)), Severity, State=tostring(properties.essentials.alertState), AlertName=name, AffectedServer = coalesce(AffectedServer1, Computer), Description=tostring(properties.essentials.description), Updatedby=tostring(properties.essentials.lastModifiedUserName)\r\n| where (AffectedServer contains \"db\") or (AffectedServer in~ (\"azsapd003\",\"azsapd007\",\"azsapd035\",\"azsapd039\",\"azsapd041\",\"dkcdcsapp076\",\"dkcdcsapd082\",\"\"))\r\n| order by StartTime desc\r\n",
                    "size": 0,
                    "title": "Closed Alerts",
                    "noDataMessage": "No alerts found",
                    "noDataMessageStyle": 3,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "AlertId",
                          "formatter": 5,
                          "formatOptions": {
                            "linkTarget": "Resource"
                          }
                        },
                        {
                          "columnMatch": "StartTime",
                          "formatter": 6
                        },
                        {
                          "columnMatch": "Severity",
                          "formatter": 11
                        },
                        {
                          "columnMatch": "State",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "Name",
                          "formatter": 1,
                          "formatOptions": {
                            "linkTarget": "OpenBlade",
                            "linkIsContextBlade": true,
                            "bladeOpenContext": {
                              "bladeName": "AlertDetailsTemplateBlade",
                              "extensionName": "Microsoft_Azure_Monitoring",
                              "bladeParameters": [
                                {
                                  "name": "alertId",
                                  "source": "column",
                                  "value": "AlertId"
                                },
                                {
                                  "name": "alertName",
                                  "source": "column",
                                  "value": "Name"
                                },
                                {
                                  "name": "invokedFrom",
                                  "source": "static",
                                  "value": "Workbooks"
                                }
                              ]
                            }
                          },
                          "tooltipFormat": {
                            "tooltip": "View alert details"
                          }
                        },
                        {
                          "columnMatch": "TargetResource",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "subTarget": "alerts",
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "essentials",
                          "formatter": 5,
                          "formatOptions": {
                            "linkTarget": "CellDetails",
                            "linkIsContextBlade": true
                          }
                        }
                      ],
                      "rowLimit": 1000,
                      "filter": true
                    }
                  },
                  "customWidth": "70",
                  "conditionalVisibilities": [
                    {
                      "parameterName": "Severity",
                      "comparison": "isNotEqualTo"
                    },
                    {
                      "parameterName": "tab",
                      "comparison": "isEqualTo",
                      "value": "details"
                    }
                  ],
                  "showPin": true,
                  "name": "Alerts for severity"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "AlertsManagementResources | where type =~ 'microsoft.alertsmanagement/alerts'\r\n| where todatetime(properties.essentials.startDateTime) {timeRange}  \r\n| extend Severity=tostring(properties.essentials.severity)\r\n| where Severity in ({Severity})\r\n| extend State=tostring(properties.essentials.alertState)\r\n| where \"*\" in ({State}) or State in ({State})\r\n| where \"*\" in ({ResourceTypes}) or properties.essentials.targetResourceType in~ ({ResourceTypes})\r\n| where \"*\" in ({ResourceGroups}) or properties.essentials.targetResourceGroup in~ ({ResourceGroups})\r\n| where \"*\" in ({Resources}) or properties.essentials.targetResource in~ ({Resources})\r\n| summarize Alerts=count(), New=countif(State==\"New\"), \r\nAcknowledged=countif(State==\"Acknowledged\"), \r\nClosed=countif(State==\"Closed\")\r\nby Resource=tostring(properties.essentials.targetResource )\r\n| order by Alerts desc\r\n",
                    "size": 0,
                    "title": "{Severity} Alerts by Region",
                    "noDataMessage": "No alerts found",
                    "exportMultipleValues": true,
                    "exportAggregateParts": true,
                    "exportedParameters": [
                      {
                        "parameterName": "Selected",
                        "parameterType": 1,
                        "quote": ""
                      }
                    ],
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "map",
                    "gridSettings": {
                      "rowLimit": 1000
                    },
                    "mapSettings": {
                      "locInfo": "AzureResource",
                      "locInfoColumn": "Resource",
                      "sizeSettings": "Alerts",
                      "sizeAggregation": "Sum",
                      "defaultSize": 0,
                      "legendMetric": "Alerts",
                      "legendAggregation": "Sum",
                      "itemColorSettings": {
                        "nodeColorField": "Alerts",
                        "colorAggregation": "Sum",
                        "type": "heatmap",
                        "heatmapPalette": "greenRed"
                      }
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "Severity",
                      "comparison": "isNotEqualTo"
                    },
                    {
                      "parameterName": "tab",
                      "comparison": "isEqualTo",
                      "value": "location"
                    }
                  ],
                  "showPin": true,
                  "name": "Alerts map"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "💡 Select one or more regions to see Azure resources with alerts in those regions."
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "Selected",
                      "comparison": "isEqualTo"
                    },
                    {
                      "parameterName": "tab",
                      "comparison": "isEqualTo",
                      "value": "location"
                    },
                    {
                      "parameterName": "Severity",
                      "comparison": "isNotEqualTo"
                    }
                  ],
                  "name": "map selection text"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "Subscription",
              "comparison": "isNotEqualTo"
            },
            "name": "visible if subscriptions selected"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "alert"
      },
      "name": "Closed DB Alerts"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "loadType": "always",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// Chart CPU if its under nn% over the past nn days/hours\nlet setpctValue = 85;\n// enter a % value to check\nlet startDate = ago(1h);\n// enter how many days/hours to look back on\nPerf\n| where TimeGenerated > startDate\n| where ObjectName == \"Processor\" and CounterName == \"% Processor Time\" and InstanceName == \"_Total\"\n| summarize PCT90CPUPercentTime = percentile(CounterValue, 90) by Computer\n| where PCT90CPUPercentTime >= setpctValue\n| summarize max(PCT90CPUPercentTime) by Computer\n| join\n(\nPerf\n| where TimeGenerated > startDate\n| where ObjectName == \"Processor\" and CounterName == \"% Processor Time\" and InstanceName == \"_Total\"\n)\non Computer\n| where (Computer contains \"db\") or (Computer in~ (\"azsapd003\",\"azsapd007\",\"azsapd035\",\"azsapd039\",\"azsapd041\",\"azsapd044\"))\n| make-series PCT90CPUPercentTime = percentile(CounterValue, 90) on TimeGenerated from ago( 1h ) to now() step 5m by Computer\n| render timechart\n\n",
              "size": 1,
              "aggregation": 5,
              "title": "High CPU Servers",
              "noDataMessage": "CPU utilizations are normal.",
              "timeContext": {
                "durationMs": 86400000
              },
              "showRefreshButton": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "/subscriptions/cf49a21b-2b75-4240-b62b-2f5b04f53563/resourceGroups/dch-coremgmt-rg/providers/Microsoft.OperationalInsights/workspaces/weu-prod-dch-log01"
              ],
              "chartSettings": {
                "xAxis": "TimeGenerated",
                "showLegend": true,
                "customThresholdLine": "75",
                "customThresholdLineStyle": 4
              }
            },
            "showPin": true,
            "name": "High CPU SQL Servers",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let free_memory_percent = Perf\n    | where CounterName == \"% Committed Bytes In Use\"\n    | summarize arg_max(TimeGenerated, CounterValue) by Computer\n    | project TimeGenerated, Computer, free_memory_percent=100 - CounterValue;\nlet free_memory_gigs = Perf\n    | where CounterName == \"Available MBytes\"\n    | summarize arg_max(TimeGenerated, CounterValue) by Computer\n    | project TimeGenerated, Computer, Free_Memory_GB=(round(CounterValue / 1024, 2));\nfree_memory_gigs \n| join kind= innerunique(free_memory_percent) on Computer\n| where TimeGenerated > ago(3m) \n//| where time_diff=abs((TimeGenerated-TimeGenerated1)/1m)<1\n| where Computer contains \"db\"\n| project\n    Computer,\n    FreeMemoryG = Free_Memory_GB,\n    //Total_GB=(round((Free_Memory_GB * 100) / free_memory_percent, 2)),\n    MemoryUsage=(100 * ((round((Free_Memory_GB * 100) / free_memory_percent, 2)) - Free_Memory_GB)) / (round((Free_Memory_GB * 100) / free_memory_percent, 2))\n//| project TimeGenerated, Computer, Free_Memory_GB, Total_GB=(round((Free_Memory_GB*100)/free_memory_percent,2))\n| sort by MemoryUsage desc  \n| top 10 by MemoryUsage\n\n",
              "size": 0,
              "title": "Memory Consumption",
              "timeContext": {
                "durationMs": 86400000
              },
              "showRefreshButton": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "/subscriptions/cf49a21b-2b75-4240-b62b-2f5b04f53563/resourcegroups/dch-coremgmt-rg/providers/microsoft.operationalinsights/workspaces/weu-prod-dch-log01"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "MemoryUsage",
                    "formatter": 4,
                    "formatOptions": {
                      "min": 1,
                      "max": 100,
                      "palette": "blue",
                      "aggregation": "Average"
                    }
                  }
                ]
              }
            },
            "showPin": true,
            "name": "query - 6",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let data_disk_threshold_percent = 10;\nlet os_disk_threshold_percent = 10;\nlet disk_free_space_percent=\nPerf \n| where TimeGenerated > ago(10m)\n| where ObjectName == \"LogicalDisk\" and CounterName == \"% Free Space\" \n| summarize (TimeGenerated, Free_Space_Percent)=arg_max(TimeGenerated, CounterValue) by Computer, InstanceName \n| where strlen(InstanceName) ==2 and InstanceName contains \":\";\nlet disk_free_MB=\nPerf \n| where TimeGenerated > ago(10m)\n| where ObjectName == \"LogicalDisk\" and CounterName == \"Free Megabytes\" \n| summarize (TimeGenerated, Free_MB)=arg_max(TimeGenerated, CounterValue) by Computer, InstanceName \n| where strlen(InstanceName) ==2 and InstanceName contains \":\";\ndisk_free_space_percent \n| join (\n   disk_free_MB \n) on Computer, InstanceName\n| extend Used_Space_Percent = round(100 - Free_Space_Percent)\n| extend Alert_Threshold = case(InstanceName == 'C:', os_disk_threshold_percent, data_disk_threshold_percent)\n| where (InstanceName in ('C:', 'D:') and Free_Space_Percent <= os_disk_threshold_percent) \n        or (InstanceName !in ('C:', 'D:') and Free_Space_Percent <= data_disk_threshold_percent)\n| parse Computer with Computer \".\" *\n| project Server = Computer, Drive = InstanceName, UsedSpacePCT = Used_Space_Percent, FreeSpacePCT = Free_Space_Percent , Free_MB\n//| project Server = Computer, InstanceName, UsedSpacePCT = Used_Space_Percent, FreeSpacePCT = Free_Space_Percent , Free_MB\n//| where ((InstanceName !in (\"C:\",\"D:\",\"Z:\",\"S:\") and Used_Space_Percent > 90)\n| where ((Drive !contains \"C:\" and Drive !contains \"D:\" and Drive !contains \"S:\") and UsedSpacePCT > 90) //or ((InstanceName <> \"C:\" and InstanceName <> \"D:\") and Used_Space_Percent >= 95)\n| where (Server contains \"db\") or (Server in~ (\"azsapd003\",\"azsapd007\",\"azsapd035\",\"azsapd039\",\"azsapd041\",\"azsapd044\",\"dkcdcsapp076\",\"dkcdcsapd082\"))",
              "size": 1,
              "title": "Windows Critical DIsk Space",
              "noDataMessage": "No critical disk space detected.",
              "timeContext": {
                "durationMs": 86400000
              },
              "showRefreshButton": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "/subscriptions/cf49a21b-2b75-4240-b62b-2f5b04f53563/resourceGroups/dch-coremgmt-rg/providers/Microsoft.OperationalInsights/workspaces/weu-prod-dch-log01"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "UsedSpacePCT",
                    "formatter": 3,
                    "formatOptions": {
                      "min": 1,
                      "max": 100,
                      "palette": "greenRed"
                    }
                  },
                  {
                    "columnMatch": "Used_Space_Percent",
                    "formatter": 3,
                    "formatOptions": {
                      "min": 1,
                      "max": 100,
                      "palette": "greenRed"
                    }
                  }
                ]
              }
            },
            "showPin": true,
            "name": "SQL Disk Space Usage",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let disk_free_space_percent=\n    Perf \n    | where TimeGenerated > ago(10m)\n    | where ObjectName == \"Logical Disk\" and CounterName == \"% Used Space\"\n    | summarize (TimeGenerated, Used_Space_Percent)=arg_max(TimeGenerated, CounterValue) by Computer, InstanceName \n    | where strlen(InstanceName) == 2 and (InstanceName contains \":\") or (InstanceName contains \"/\");\nlet disk_free_MB=\n    Perf \n    | where TimeGenerated > ago(10m)\n    | where ObjectName == \"Logical Disk\" and CounterName == \"Free Megabytes\" \n    | summarize (TimeGenerated, Free_MB)=arg_max(TimeGenerated, CounterValue) by Computer, InstanceName \n    | where strlen(InstanceName) == 2 and (InstanceName contains \":\") or (InstanceName contains \"/\");\ndisk_free_space_percent \n| join (\n    disk_free_MB \n    )\n    on Computer, InstanceName\n//| extend Used_Space_Percent = round(100 - Free_Space_Percent)\n//| parse InstanceName with InstanceName \"/\" *\n| project Server = Computer, Drive = InstanceName, UsedSpacePCT = Used_Space_Percent, Free_MB\n| where Server in~ (\"azsappdb03\",\"azsappdb04\",\"azsappdb05\",\"azsappdb06\",\"azsappdb21\",\"azsappdb28\",\"azsappdb29\",\"azsapddb03\",\"azsapddb05\",\"azsapddb06\",\"azsapddb10\",\"azsapddb11\",\"azsapddb15\",\"azsapqdb04\",\"azsapqdb16\")\n| where UsedSpacePCT >= 90\n| where Drive in~ (\"/usr/sap\",\"/hana/log\",\"/hana/shared\",\"/hana/backup\",\"/hana/data\")\n| order by UsedSpacePCT desc \n",
              "size": 1,
              "title": "Linux Critical Disk Space",
              "noDataMessage": "No critical disk space detected.",
              "timeContext": {
                "durationMs": 86400000
              },
              "showRefreshButton": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "/subscriptions/cf49a21b-2b75-4240-b62b-2f5b04f53563/resourceGroups/dch-coremgmt-rg/providers/Microsoft.OperationalInsights/workspaces/weu-prod-dch-log01"
              ],
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "UsedSpacePCT",
                    "formatter": 3,
                    "formatOptions": {
                      "min": 1,
                      "max": 100,
                      "palette": "greenRed"
                    }
                  },
                  {
                    "columnMatch": "Computer",
                    "formatter": 1
                  },
                  {
                    "columnMatch": "Used_Space_Percent",
                    "formatter": 3,
                    "formatOptions": {
                      "min": 1,
                      "max": 100,
                      "palette": "greenRed",
                      "compositeBarSettings": {
                        "labelText": "",
                        "columnSettings": []
                      }
                    }
                  }
                ]
              },
              "sortBy": []
            },
            "showPin": true,
            "name": "query - 2",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// Events by event source \r\nlet eventIDS = dynamic([\"41\", \"1074\", \"1076\"]);\r\nEvent\r\n| where TimeGenerated >= ago(24h)\r\n| where EventID in (eventIDS)\r\n| where (Computer contains \"db\") or (Computer in~ (\"azsapd003\",\"azsapd007\",\"azsapd035\",\"azsapd039\",\"azsapd041\"))\r\n| summarize LatestErrorDate = max(TimeGenerated) by _ResourceId, Computer, EventID, RenderedDescription\r\n| project Computer, EventID, LatestErrorDate, RenderedDescription//, _ResourceId\r\n| order by LatestErrorDate desc",
              "size": 0,
              "title": "VM Shutdown and Restart Log",
              "noDataMessage": "No restart and/or shutdown occured.",
              "showRefreshButton": true,
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "/subscriptions/cf49a21b-2b75-4240-b62b-2f5b04f53563/resourceGroups/dch-coremgmt-rg/providers/Microsoft.OperationalInsights/workspaces/weu-prod-dch-log01"
              ]
            },
            "showPin": true,
            "name": "query - 3",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// Events by event source \r\nlet eventIDS = dynamic([\"19\", \"43\", \"44\"]);\r\nEvent\r\n//| where TimeGenerated >= ago(3d)\r\n| where EventID in (eventIDS)\r\n| where (Computer contains \"db\") or (Computer in~ (\"azsapd003\",\"azsapd007\",\"azsapd035\",\"azsapd039\",\"azsapd041\",\"azsapd044\"))\r\n| summarize LatestErrorDate = max(TimeGenerated) by _ResourceId, Computer, EventID, RenderedDescription\r\n| project Computer, EventID, LatestErrorDate, RenderedDescription//, _ResourceId\r\n| order by LatestErrorDate desc\r\n",
              "size": 0,
              "title": "Windows Update Log",
              "timeContext": {
                "durationMs": 86400000
              },
              "showRefreshButton": true,
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "/subscriptions/cf49a21b-2b75-4240-b62b-2f5b04f53563/resourceGroups/dch-coremgmt-rg/providers/Microsoft.OperationalInsights/workspaces/weu-prod-dch-log01"
              ],
              "gridSettings": {
                "rowLimit": 2000,
                "filter": true
              }
            },
            "showPin": true,
            "name": "query - 4",
            "styleSettings": {
              "showBorder": true
            }
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "stat"
      },
      "name": "Server Statistics"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// Events by event source \r\nlet eventIDS = dynamic([\"605\", \"823\", \"824\", \"825\", \"3414\", \"5180\", \"7105\", \"9004\"]);\r\nEvent\r\n//| where TimeGenerated >= ago(3d)\r\n| where EventID in (eventIDS)\r\n| summarize LatestErrorDate = max(TimeGenerated) by _ResourceId, Computer, EventID, RenderedDescription\r\n| project Computer, EventID, LatestErrorDate, RenderedDescription, _ResourceId\r\n| order by LatestErrorDate desc\r\n",
              "size": 4,
              "title": "Database Corruption Monitoring",
              "noDataMessage": "No database integrity threats detected.",
              "noDataMessageStyle": 3,
              "timeContext": {
                "durationMs": 259200000
              },
              "showRefreshButton": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "/subscriptions/cf49a21b-2b75-4240-b62b-2f5b04f53563/resourceGroups/dch-coremgmt-rg/providers/Microsoft.OperationalInsights/workspaces/weu-prod-dch-log01"
              ],
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "EventID",
                    "formatter": 0,
                    "formatOptions": {
                      "compositeBarSettings": {
                        "labelText": "",
                        "columnSettings": []
                      },
                      "customColumnWidthSetting": "8ch"
                    }
                  },
                  {
                    "columnMatch": "_ResourceId",
                    "formatter": 5
                  }
                ]
              },
              "tileSettings": {
                "showBorder": false,
                "titleContent": {
                  "columnMatch": "Computer",
                  "formatter": 1
                },
                "leftContent": {
                  "columnMatch": "EventID",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "auto"
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "maximumSignificantDigits": 3,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              }
            },
            "showPin": true,
            "name": "query - 0",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// Events by event source \r\nlet eventIDS = dynamic([\"1000\",\"1001\",\"1006\",\"1057\",\"1069\",\"1070\",\"1073\",\"1080\",\"1090\",\"1092\",\"1093\",\"1105\",\"1135\",\"1146\",\"1177\",\"1181\",\"1247\",\"1248\",\"1282\",\"1542\",\"1543\",\"1546\",\"1547\",\"1553\",\"1554\",\"1556\",\"1561\",\"1641\",\"1201\",\"1024\",\"1034\",\"1035\",\"1037\",\"1038\",\"1039\",\"1040\",\"1041\",\"1042\",\"1044\",\"1046\",\"1047\",\"1048\",\"1049\",\"1050\",\"1051\",\"1052\",\"1053\",\"1054\",\"1055\",\"1069\",\"1077\",\"1078\",\"1121\",\"1127\",\"1129\",\"1130\",\"1137\",\"1138\",\"1141\",\"1142\",\"1182\",\"1183\",\"1191\",\"1192\",\"1193\",\"1194\",\"1195\",\"1196\",\"1205\",\"1206\",\"1207\",\"1208\",\"1211\",\"1212\",\"1213\",\"1214\",\"1215\",\"1218\",\"1219\",\"1220\",\"1223\",\"1226\",\"1227\",\"1228\",\"1229\",\"1230\",\"1231\",\"1232\",\"1233\",\"1234\",\"1242\",\"1245\",\"1250\",\"1254\",\"1255\",\"1256\"]);\r\nEvent\r\n//| where TimeGenerated >= ago(24h)\r\n| where EventID in (eventIDS)\r\n| where (Computer contains \"db\") or (Computer in~ (\"azsapd003\",\"azsapd007\",\"azsapd035\",\"azsapd039\",\"azsapd041\",\"azsapd044\"))\r\n| summarize LatestErrorDate = max(TimeGenerated) by _ResourceId, Computer, EventID, RenderedDescription\r\n| project Computer, EventID, LatestErrorDate, RenderedDescription //, _ResourceId\r\n| order by LatestErrorDate desc",
              "size": 1,
              "title": "Failover Clustering Errors",
              "noDataMessage": "No clustering errors occured.",
              "timeContext": {
                "durationMs": 43200000
              },
              "showRefreshButton": true,
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "/subscriptions/cf49a21b-2b75-4240-b62b-2f5b04f53563/resourceGroups/dch-coremgmt-rg/providers/Microsoft.OperationalInsights/workspaces/weu-prod-dch-log01"
              ]
            },
            "showPin": true,
            "name": "query - 1",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// HPMO: Stopped SQL Server Services within the past 24 hours\r\nlet Alert_Threshold = 'State';\r\nConfigurationChange  // (relies on the Change Tracking solution): \r\n| where TimeGenerated > ago(24h)\r\n| where ConfigChangeType == \"WindowsServices\" and SvcChangeType == \"State\"\r\n| where SvcName contains 'MSSQL' and SvcName !contains \"launch\" and SvcName !contains \"OLAP\"\r\n| where SvcStartupType == \"Auto\" and SvcState != 'Running'\r\n| parse Computer with Computer \".\" *\r\n| project Server = Computer, SQLService = SvcDisplayName, ServiceState = SvcState",
              "size": 4,
              "title": "Stopped SQL Server Services",
              "noDataMessage": "All SQL Server Services are up and running",
              "noDataMessageStyle": 3,
              "showRefreshButton": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "/subscriptions/cf49a21b-2b75-4240-b62b-2f5b04f53563/resourceGroups/dch-coremgmt-rg/providers/Microsoft.OperationalInsights/workspaces/weu-prod-dch-log01"
              ]
            },
            "showPin": true,
            "name": "query - 2",
            "styleSettings": {
              "showBorder": true
            }
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "check"
      },
      "name": "Database Monitoring",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "print banner=strcat(\"SQL Server\"), banner1=strcat(\"and SAP HANA\"), banner2=strcat(\"in Azure VM\"), X = \"Virtual Machines List\"\r\n",
                    "size": 3,
                    "color": "green",
                    "timeContext": {
                      "durationMs": 86400000
                    },
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "/subscriptions/cf49a21b-2b75-4240-b62b-2f5b04f53563/resourceGroups/dch-coremgmt-rg/providers/Microsoft.OperationalInsights/workspaces/weu-prod-dch-log01"
                    ],
                    "visualization": "tiles",
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "banner",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "blue",
                          "compositeBarSettings": {
                            "labelText": "",
                            "columnSettings": [
                              {
                                "columnName": "banner",
                                "color": "orange"
                              }
                            ]
                          }
                        }
                      },
                      "subtitleContent": {
                        "columnMatch": "banner1",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "blue"
                        }
                      },
                      "leftContent": {
                        "columnMatch": "banner2",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "blue"
                        }
                      },
                      "rightContent": {
                        "columnMatch": "banner3",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "blue"
                        }
                      },
                      "secondaryContent": {
                        "columnMatch": "X",
                        "formatter": 18,
                        "formatOptions": {
                          "thresholdsOptions": "icons",
                          "thresholdsGrid": [
                            {
                              "operator": "contains",
                              "thresholdValue": "Virtual",
                              "representation": "Hyperlink",
                              "text": "{0}{1}"
                            },
                            {
                              "operator": "Default",
                              "thresholdValue": null,
                              "representation": "success",
                              "text": "{0}{1}"
                            }
                          ]
                        }
                      },
                      "showBorder": true,
                      "size": "auto"
                    },
                    "textSettings": {
                      "style": "bignumber"
                    }
                  },
                  "customWidth": "0",
                  "conditionalVisibility": {
                    "parameterName": "SQL",
                    "comparison": "isEqualTo",
                    "value": "N"
                  },
                  "showPin": true,
                  "name": "query - 3"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "// Run query to see results.\r\nresources\r\n| where type =~ 'Microsoft.SqlVirtualMachine/SqlVirtualMachines'\r\n| extend Environment = case(subscriptionId =~ \"2df031a7-e21f-49c7-b61e-b0bb3e097c79\", 'DEV',\r\n    subscriptionId =~ \"3a8032ca-dc2c-4137-9f64-f8daaa55c78d\", 'PRD',\r\n    subscriptionId =~ \"cbb944ea-aa79-4701-909a-e114ab57ad7a\", 'TST',\r\n    \"--\")\r\n| extend p = parse_json(properties)\r\n| extend version = iff(isnotempty(p.sqlImageOffer), p.sqlImageOffer, \"--\"),\r\n    edition = iff(isnotempty(p.sqlImageSku), p.sqlImageSku, \"--\"),\r\n    managementMode = case(p.sqlManagement =~ \"Full\", 'Full mode',\r\n        p.sqlManagement =~ \"LightWeight\", 'Light weight mode',\r\n        p.sqlManagement =~ \"NoAgent\", 'No agent mode',\r\n        p.sqlManagement =~ \"NotSet\", 'Not set',\r\n        \"--\"),\r\n    licenseType = case(p.sqlServerLicenseType =~ \"PAYG\", \"Pay As You Go\",\r\n        p.sqlServerLicenseType =~ \"AHUB\", \"Azure Hybrid Benefit\",\r\n        p.sqlServerLicenseType =~ \"DR\", \"HA/DR\",\r\n        \"--\")\r\n| project id, name, Environment, resourceGroup, version, edition, managementMode, licenseType,  location\r\n//| where subscriptionId contains 'dev'\r\n| sort by name asc ",
                    "size": 0,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "/subscriptions/2df031a7-e21f-49c7-b61e-b0bb3e097c79",
                      "/subscriptions/3a8032ca-dc2c-4137-9f64-f8daaa55c78d",
                      "/subscriptions/cbb944ea-aa79-4701-909a-e114ab57ad7a"
                    ]
                  },
                  "customWidth": "0",
                  "conditionalVisibility": {
                    "parameterName": "SQL",
                    "comparison": "isEqualTo",
                    "value": "N"
                  },
                  "name": "SQLVM",
                  "styleSettings": {
                    "margin": "0",
                    "padding": "0",
                    "maxWidth": "100",
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "// Run query to see results.\r\nresources\r\n| where type =~ 'microsoft.compute/virtualmachines'\r\n| where name in~ (\"azsapd007\",\"azsapd035\",\"azsapd039\" )//\"azsapqdb03\"\"azsapddb07\",)\r\n| extend Environment = case(subscriptionId =~ \"2df031a7-e21f-49c7-b61e-b0bb3e097c79\", 'DEV',\r\n    subscriptionId =~ \"3a8032ca-dc2c-4137-9f64-f8daaa55c78d\", 'PRD',\r\n    subscriptionId =~ \"cbb944ea-aa79-4701-909a-e114ab57ad7a\", 'TST',\r\n    \"--\")\r\n| extend p = parse_json(properties)\r\n| extend version = iff(isnotempty(p.sqlImageOffer), p.sqlImageOffer, \"--\"),\r\n    edition = iff(isnotempty(p.sqlImageSku), p.sqlImageSku, \"--\"),\r\n    managementMode = case(p.sqlManagement =~ \"Full\", 'Full mode',\r\n        p.sqlManagement =~ \"LightWeight\", 'Light weight mode',\r\n        p.sqlManagement =~ \"NoAgent\", 'No agent mode',\r\n        p.sqlManagement =~ \"NotSet\", 'Not set',\r\n        \"--\"),\r\n    licenseType = case(p.sqlServerLicenseType =~ \"PAYG\", \"Pay As You Go\",\r\n        p.sqlServerLicenseType =~ \"AHUB\", \"Azure Hybrid Benefit\",\r\n        p.sqlServerLicenseType =~ \"DR\", \"HA/DR\",\r\n        \"--\")\r\n| project id, name, Environment, resourceGroup, version, edition, managementMode, licenseType,  location\r\n| sort by name asc\r\n\r\n",
                    "size": 0,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "/subscriptions/cbb944ea-aa79-4701-909a-e114ab57ad7a",
                      "/subscriptions/3a8032ca-dc2c-4137-9f64-f8daaa55c78d",
                      "/subscriptions/2df031a7-e21f-49c7-b61e-b0bb3e097c79"
                    ]
                  },
                  "customWidth": "0",
                  "conditionalVisibility": {
                    "parameterName": "SQL",
                    "comparison": "isEqualTo",
                    "value": "N"
                  },
                  "showPin": false,
                  "name": "VM",
                  "styleSettings": {
                    "maxWidth": "100"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"8a3f7708-d558-48a0-937d-6ca5796cb070\",\"mergeType\":\"union\",\"leftTable\":\"VM\",\"rightTable\":\"SQLVM\"}],\"projectRename\":[{\"originalName\":\"id\",\"mergedName\":\"id\",\"fromId\":\"unknown\"},{\"originalName\":\"name\",\"mergedName\":\"name\",\"fromId\":\"unknown\"},{\"originalName\":\"Environment\",\"mergedName\":\"Environment\",\"fromId\":\"unknown\"},{\"originalName\":\"resourceGroup\",\"mergedName\":\"resourceGroup\",\"fromId\":\"unknown\"},{\"originalName\":\"version\",\"mergedName\":\"version\",\"fromId\":\"unknown\"},{\"originalName\":\"edition\",\"mergedName\":\"edition\",\"fromId\":\"unknown\"},{\"originalName\":\"managementMode\",\"mergedName\":\"managementMode\",\"fromId\":\"unknown\"},{\"originalName\":\"licenseType\",\"mergedName\":\"licenseType\",\"fromId\":\"unknown\"},{\"originalName\":\"location\",\"mergedName\":\"location\",\"fromId\":\"unknown\"},{\"originalName\":\"[VM].id\",\"mergedName\":\"id1\",\"fromId\":\"8a3f7708-d558-48a0-937d-6ca5796cb070\"},{\"originalName\":\"[VM].name\",\"mergedName\":\"name1\",\"fromId\":\"8a3f7708-d558-48a0-937d-6ca5796cb070\"},{\"originalName\":\"[VM].Environment\",\"mergedName\":\"Environment1\",\"fromId\":\"8a3f7708-d558-48a0-937d-6ca5796cb070\"},{\"originalName\":\"[VM].resourceGroup\",\"mergedName\":\"resourceGroup1\",\"fromId\":\"8a3f7708-d558-48a0-937d-6ca5796cb070\"},{\"originalName\":\"[VM].version\",\"mergedName\":\"version1\",\"fromId\":\"8a3f7708-d558-48a0-937d-6ca5796cb070\"},{\"originalName\":\"[VM].edition\",\"mergedName\":\"edition1\",\"fromId\":\"8a3f7708-d558-48a0-937d-6ca5796cb070\"},{\"originalName\":\"[VM].managementMode\",\"mergedName\":\"managementMode1\",\"fromId\":\"8a3f7708-d558-48a0-937d-6ca5796cb070\"},{\"originalName\":\"[VM].licenseType\",\"mergedName\":\"licenseType1\",\"fromId\":\"8a3f7708-d558-48a0-937d-6ca5796cb070\"},{\"originalName\":\"[VM].location\",\"mergedName\":\"location1\",\"fromId\":\"8a3f7708-d558-48a0-937d-6ca5796cb070\"}]}",
                    "size": 3,
                    "title": "SQL Servers Installed",
                    "queryType": 7,
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "name",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Environment",
                          "formatter": 5
                        }
                      ],
                      "filter": true,
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "Environment"
                        ],
                        "expandTopLevel": false
                      }
                    }
                  },
                  "customWidth": "75",
                  "showPin": true,
                  "name": "SQL",
                  "styleSettings": {
                    "showBorder": true
                  }
                }
              ]
            },
            "name": "VMs with SQL Installed"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// Run query to see results.\r\nresources\r\n| where type =~ 'microsoft.compute/virtualmachines'\r\n//| where name in~ (\"azsappdb03\",\"azsappdb04\",\"azsappdb05\",\"azsappdb06\",\"azsapddb03\",\"azsapddb05\",\"azsapddb06\",\"azsapqdb04\",\"azsapqdb16\")\r\n| extend Environment = case(subscriptionId =~ \"2df031a7-e21f-49c7-b61e-b0bb3e097c79\", 'DEV',\r\n    subscriptionId =~ \"3a8032ca-dc2c-4137-9f64-f8daaa55c78d\", 'PRD',\r\n    subscriptionId =~ \"cbb944ea-aa79-4701-909a-e114ab57ad7a\", 'TST',\r\n    \"--\")\r\n//| extend p = parse_json(properties)\r\n//| extend OS = p.extended.osName\r\n//        Version = p.extended.osVerion\r\n| where properties.storageProfile has \"RHEL-SAP-HA\"\r\n| project id, name, Environment, OS = properties.extended.instanceView.osName, Version = properties.extended.instanceView.osVersion, resourceGroup, location\r\n| sort by name asc\r\n\r\n",
              "size": 3,
              "title": "VMs with SAPHANA DB",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "/subscriptions/cbb944ea-aa79-4701-909a-e114ab57ad7a",
                "/subscriptions/3a8032ca-dc2c-4137-9f64-f8daaa55c78d",
                "/subscriptions/2df031a7-e21f-49c7-b61e-b0bb3e097c79"
              ],
              "visualization": "table",
              "gridSettings": {
                "filter": true,
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "Environment"
                  ],
                  "expandTopLevel": false
                }
              },
              "tileSettings": {
                "showBorder": false
              }
            },
            "customWidth": "75",
            "name": "query - 1",
            "styleSettings": {
              "showBorder": true
            }
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "list"
      },
      "name": "DB Servers"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "a24f7f98-dc7a-42b2-b764-c9e99ff33754",
            "cellValue": "TabName",
            "linkTarget": "parameter",
            "linkLabel": "Get Started",
            "subTarget": "Overview",
            "style": "link"
          },
          {
            "id": "c46c1b48-bcd5-48f3-b515-44a2f3d78669",
            "cellValue": "TabName",
            "linkTarget": "parameter",
            "linkLabel": "Summary",
            "subTarget": "Summary",
            "style": "primary",
            "workbookContext": {
              "componentIdSource": "workbook",
              "resourceIdsSource": "workbook",
              "templateIdSource": "static",
              "templateId": "13bf0ff5-c132-4c85-910e-9de00bb3d26e",
              "typeSource": "workbook",
              "gallerySource": "workbook"
            }
          },
          {
            "id": "d82feaf3-d662-4fe9-b7c9-ab07bdba600f",
            "cellValue": "TabName",
            "linkTarget": "parameter",
            "linkLabel": "Backup Instances",
            "subTarget": "BackupItems",
            "style": "secondary",
            "workbookContext": {
              "componentIdSource": "workbook",
              "resourceIdsSource": "workbook",
              "templateIdSource": "static",
              "templateId": "Community-Workbooks/Azure Backup/Storage",
              "typeSource": "default",
              "gallerySource": "static",
              "gallery": "Azure Monitor"
            }
          },
          {
            "id": "0af01583-e55c-4b0a-a395-fd5037f30095",
            "cellValue": "TabName",
            "linkTarget": "parameter",
            "linkLabel": "Usage",
            "subTarget": "Usage",
            "style": "secondary",
            "workbookContext": {
              "componentIdSource": "workbook",
              "resourceIdsSource": "workbook",
              "templateIdSource": "static",
              "templateId": "Community-Workbooks/Azure Backup/Protected Instances",
              "typeSource": "default",
              "gallerySource": "static",
              "gallery": "Azure Monitor"
            }
          },
          {
            "id": "fbbecb40-83ec-4fe8-a5e0-973f8b14b22f",
            "cellValue": "TabName",
            "linkTarget": "parameter",
            "linkLabel": "Jobs",
            "subTarget": "JobDistribution",
            "style": "secondary",
            "workbookContext": {
              "componentIdSource": "workbook",
              "resourceIdsSource": "workbook",
              "templateIdSource": "static",
              "templateId": "Community-Workbooks/Azure Backup/Job Distribution",
              "typeSource": "default",
              "gallerySource": "static",
              "gallery": "Azure Monitor"
            }
          },
          {
            "id": "4101ac0a-663b-4c00-ad04-d5e0a9b5c126",
            "cellValue": "TabName",
            "linkTarget": "parameter",
            "linkLabel": "Policies",
            "subTarget": "PolicyDetails",
            "style": "link"
          },
          {
            "id": "883f8a53-19af-4f96-bce4-3e60c0d391e7",
            "cellValue": "TabName",
            "linkTarget": "parameter",
            "linkLabel": "Optimize",
            "subTarget": "Optimize",
            "style": "link"
          },
          {
            "id": "fd346de8-b14d-4ce9-9014-bcdf8c44b55a",
            "cellValue": "TabName",
            "linkTarget": "parameter",
            "linkLabel": "Policy Adherence",
            "subTarget": "Policy Adherence",
            "style": "link"
          },
          {
            "id": "92590424-cfc1-42b5-8212-a2ba823f9b44",
            "cellValue": "TabName",
            "linkTarget": "parameter",
            "linkLabel": "Email Report",
            "subTarget": "Email",
            "style": "link"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "report"
      },
      "name": "Tabs"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Workspaces}"
        ],
        "parameters": [
          {
            "id": "d1f42f81-eb8f-4653-a0ff-38564d7487b4",
            "version": "KqlParameterItem/1.0",
            "name": "Subscriptions",
            "type": 6,
            "description": "Subscriptions to filter the list of workspaces",
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "includeAll": false,
              "selectAllValue": ""
            }
          },
          {
            "id": "2373a24f-ad32-4909-a7f6-59b373dcde6c",
            "version": "KqlParameterItem/1.0",
            "name": "Workspaces",
            "type": 5,
            "description": "LA Workspaces configured in vault diagnostic settings",
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "where type =~ 'microsoft.operationalinsights/workspaces' | project id",
            "crossComponentResources": [
              "{Subscriptions}"
            ],
            "value": [
              "/subscriptions/cf49a21b-2b75-4240-b62b-2f5b04f53563/resourceGroups/dch-coremgmt-rg/providers/Microsoft.OperationalInsights/workspaces/weu-prod-dch-log01"
            ],
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "64dd748f-d528-4912-a3bf-4a503e0b17f6",
            "version": "KqlParameterItem/1.0",
            "name": "VaultsUsingAzureDiagnostics",
            "type": 1,
            "query": "// function Params - Report Filters\r\nlet RangeStart = startofday(ago(3d));\r\nlet RangeEnd = startofday(now());\r\nlet VaultSubscriptionList = \"*\";\r\nlet VaultLocationList = \"*\"; \r\nlet VaultList = \"*\";\r\nlet VaultTypeList = \"*\";\r\nlet ExcludeLegacyEvent_1 = false;\r\nlet ExcludeLegacyEvent_2 = true;\r\n// calling LA System Function\r\n_AzureBackup_GetVaults(RangeStart, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent_1) | distinct Id\r\n| join kind = leftanti ( \r\n// calling LA System Function\r\n_AzureBackup_GetVaults(RangeStart, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent_2) | distinct Id) on Id\r\n| count ",
            "crossComponentResources": [
              "{Workspaces}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "d894d309-7e5f-488e-afde-73796c84b711",
            "version": "KqlParameterItem/1.0",
            "name": "AzureStorageCutOffDate",
            "type": 1,
            "description": "Cut-off Date To Enable AzureStorage",
            "isRequired": true,
            "query": "{\"version\":\"1.0.0\",\"content\":\"\\\"5/14/2020, 12:00:00.000 AM\\\"\",\"transformers\":null}",
            "isHiddenWhenLocked": true,
            "queryType": 8
          }
        ],
        "style": "above",
        "doNotRunWhenHidden": true,
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "TabName",
          "comparison": "isEqualTo",
          "value": "Overview"
        },
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "report"
        }
      ],
      "customWidth": "50",
      "name": "Overview-WorkspaceParameterBlock"
    },
    {
      "type": 1,
      "content": {
        "json": "_____"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Workspaces",
          "comparison": "isNotEqualTo"
        },
        {
          "parameterName": "TabName",
          "comparison": "isEqualTo",
          "value": "Overview"
        },
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "report"
        }
      ],
      "name": "Overview-DividingLine1"
    },
    {
      "type": 1,
      "content": {
        "json": "<div style=\"text-align:left;float:left;\"><span style=\"font-size:16px;font-weight:600\">Report Filters </span> </div> <div style=\"text-align:right; float:right\"> <span style=\"font-size:12px;\"> <a href=\"https://aka.ms/AzureBackupReportDocs\" target=\"_blank\"> How to use backup reports? </a> </span> </div>"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Workspaces",
          "comparison": "isNotEqualTo"
        },
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "report"
        }
      ],
      "name": "Overview-ReportFiltersTitle"
    },
    {
      "type": 1,
      "content": {
        "json": "<p> <span style=\"font-size:12px; font-style:italic\"> Filters are applied left to right and top to bottom on each page. <a href=\"https://aka.ms/AzureBackupReportFilters\" target=\"_blank\">Learn More</a> </span> </p>"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Workspaces",
          "comparison": "isNotEqualTo"
        },
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "report"
        }
      ],
      "name": "Overview-InstructionText2"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Workspaces}"
        ],
        "parameters": [
          {
            "id": "8c4ae44c-fa9a-4498-aedc-736a56e64b43",
            "version": "KqlParameterItem/1.0",
            "name": "TimeRange",
            "label": "Time Range",
            "type": 4,
            "description": "Time Range",
            "value": {
              "durationMs": 33004800000,
              "endTime": "2023-01-18T10:54:00.000Z"
            },
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2419200000
                },
                {
                  "durationMs": 2592000000
                },
                {
                  "durationMs": 5184000000
                },
                {
                  "durationMs": 7776000000
                }
              ],
              "allowCustom": true
            },
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange"
          },
          {
            "id": "78c86854-fe3c-44c5-8ee3-23d4210827d1",
            "version": "KqlParameterItem/1.0",
            "name": "ExcludeLegacyEvent",
            "label": "Exclude Legacy Table",
            "type": 2,
            "description": "Use this parameter to avoid querying data that is sent to the legacy Azure Diagnostics table. Excluding the legacy table improves query performance time. <a href=\"https://docs.microsoft.com/azure/backup/backup-azure-diagnostic-events#legacy-event\">Learn more </a>",
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\r\n    { \"value\":\"True\",  \"selected\":true},\r\n    { \"value\":\"False\"}\r\n]",
            "value": "False"
          }
        ],
        "style": "above",
        "doNotRunWhenHidden": true,
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Workspaces",
          "comparison": "isNotEqualTo"
        },
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "report"
        }
      ],
      "customWidth": "36",
      "name": "Overview-TimeRangeParameterBlock",
      "styleSettings": {
        "maxWidth": "100%"
      }
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "8ce61d1d-e371-40bf-ad53-7ba78afb976f",
            "version": "KqlParameterItem/1.0",
            "name": "DatasourceType",
            "label": "Backup Solution",
            "type": 2,
            "description": "Use to filter reports by backup solution",
            "isRequired": true,
            "multiSelect": true,
            "quote": "",
            "delimiter": ",",
            "value": [
              "SAP HANA in Azure VM Backup",
              "SQL in Azure VM Backup"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "selectAllValue": "*",
              "showDefault": false
            },
            "jsonData": "\r\n[    \r\n{ \"value\": \"Azure Backup Agent\", \t\t\t\t\t\t\"label\": \"Azure Backup Agent\" },\r\n{ \"value\": \"Azure Backup Server\", \t\t\t\"label\": \"Azure Backup Server\" },\r\n{ \"value\": \"Azure Storage (Azure Files) Backup\", \t\t\t\t\"label\": \"Azure Storage (Azure Files) Backup\" },\r\n{ \"value\": \"Azure Virtual Machine Backup\", \t\t\t\t\t\t\"label\": \"Azure Virtual Machine Backup\" },\r\n{ \"value\": \"DPM\", \t\t\t\t\t\t\"label\": \"DPM\" },\r\n{ \"value\": \"SAP HANA in Azure VM Backup\", \"label\": \"SAP HANA in Azure VM Backup\" },\r\n{ \"value\": \"SQL in Azure VM Backup\",     \"label\": \"SQL in Azure VM Backup\" }\r\n]"
          },
          {
            "id": "678680e5-76b5-4db8-bbef-5f73942caf2e",
            "version": "KqlParameterItem/1.0",
            "name": "VaultSubscription",
            "label": "Subscription Name",
            "type": 6,
            "description": "Subscription(s) under which the vault(s) exist",
            "isRequired": true,
            "multiSelect": true,
            "quote": "",
            "delimiter": ",",
            "query": "// function Params - Report Filters\r\nlet RangeStart = startofday({TimeRange:start});\r\nlet RangeEnd = iff(startofday({TimeRange:end}) == startofday(now()) ,startofday({TimeRange:end}) - 1d , startofday({TimeRange:end}));\r\nlet VaultSubscriptionList = \"*\";\r\nlet VaultLocationList = \"*\";\r\nlet VaultList = \"*\";\r\nlet VaultTypeList = \"*\";\r\nlet ExcludeLegacyEvent = @\"{ExcludeLegacyEvent}\";\r\nlet BackupSolutionList = @\"{DatasourceType}\";\r\n// function Params - other Filters\r\nlet ProtectionInfoList = \"*\";\r\nlet Item_search =  \"*;*\";\r\nlet ItemArray = split(Item_search, \";\");\r\nlet ItemArray_length = array_length(ItemArray);\r\nlet BackupInstanceName = iff(ItemArray_length == 2, ItemArray[1], ItemArray[0] );\r\nlet DatasourceSetName = iff(ItemArray_length == 2, ItemArray[0], \"\");\r\nlet DisplayAllFields = false;\r\n// calling LA System Function\r\n_AzureBackup_GetBackupInstances(RangeStart, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList, ProtectionInfoList, DatasourceSetName, BackupInstanceName, DisplayAllFields)\r\n// query to transform function output\r\n| distinct VaultSubscriptionId",
            "crossComponentResources": [
              "{Workspaces}"
            ],
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "selectAllValue": "*",
              "showDefault": false
            },
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "2a83acc5-2123-476f-8a4c-da2fddf231a1",
            "version": "KqlParameterItem/1.0",
            "name": "VaultLocation",
            "label": "Vault Location",
            "type": 2,
            "description": "Location(s) in which the vault(s) were created",
            "isRequired": true,
            "multiSelect": true,
            "quote": "",
            "delimiter": ",",
            "query": "// function Params - Report Filters\r\nlet RangeStart = startofday({TimeRange:start});\r\nlet RangeEnd = iff(startofday({TimeRange:end}) == startofday(now()) ,startofday({TimeRange:end}) - 1d , startofday({TimeRange:end}));\r\nlet VaultSubscriptionList = todynamic( replace(\"/subscriptions/\", \"\", @\"{VaultSubscription}\"));\r\nlet VaultLocationList = \"*\";\r\nlet VaultList = \"*\";\r\nlet VaultTypeList = \"*\";\r\nlet ExcludeLegacyEvent = @\"{ExcludeLegacyEvent}\";\r\nlet BackupSolutionList = @\"{DatasourceType}\";\r\n// function Params - other Filters\r\nlet ProtectionInfoList = \"*\";\r\nlet Item_search =  \"*;*\";\r\nlet ItemArray = split(Item_search, \";\");\r\nlet ItemArray_length = array_length(ItemArray);\r\nlet BackupInstanceName = iff(ItemArray_length == 2, ItemArray[1], ItemArray[0] );\r\nlet DatasourceSetName = iff(ItemArray_length == 2, ItemArray[0], \"\");\r\nlet DisplayAllFields = false;\r\n// calling LA System Function\r\n_AzureBackup_GetBackupInstances(RangeStart, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList, ProtectionInfoList, DatasourceSetName, BackupInstanceName, DisplayAllFields)\r\n// query to transform function output\r\n| distinct VaultLocation",
            "crossComponentResources": [
              "{Workspaces}"
            ],
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "selectAllValue": "*",
              "showDefault": false
            },
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "fefd31fa-2774-43ca-8cc3-44d477c969f0",
            "version": "KqlParameterItem/1.0",
            "name": "VaultName",
            "label": "Vault Name",
            "type": 2,
            "description": "Name(s) of the vault(s)",
            "isRequired": true,
            "multiSelect": true,
            "quote": "",
            "delimiter": ",",
            "query": "// function Params - Report Filters\r\nlet RangeStart = startofday({TimeRange:start});\r\nlet RangeEnd = iff(startofday({TimeRange:end}) == startofday(now()) ,startofday({TimeRange:end}) - 1d , startofday({TimeRange:end}));\r\nlet VaultSubscriptionList = todynamic( replace(\"/subscriptions/\", \"\", @\"{VaultSubscription}\"));\r\nlet VaultLocationList = todynamic( @\"{VaultLocation}\"); \r\nlet VaultList = \"*\";\r\nlet VaultTypeList = \"*\";\r\nlet ExcludeLegacyEvent = @\"{ExcludeLegacyEvent}\";\r\n// calling LA System Function\r\n_AzureBackup_GetVaults(RangeStart, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent)\r\n// query to transform function output\r\n| distinct Name ",
            "crossComponentResources": [
              "{Workspaces}"
            ],
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "selectAllValue": "*",
              "showDefault": false
            },
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          }
        ],
        "style": "above",
        "doNotRunWhenHidden": true,
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Workspaces",
          "comparison": "isNotEqualTo"
        },
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "report"
        }
      ],
      "customWidth": "64",
      "name": "Overview-ReportParameterBlock",
      "styleSettings": {
        "maxWidth": "100%"
      }
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Workspaces}"
        ],
        "parameters": [
          {
            "id": "3c5a3e26-bce4-43d9-a22d-e963a0d734af",
            "version": "KqlParameterItem/1.0",
            "name": "ResourceGroupId",
            "type": 1,
            "query": "resources | where type==\"microsoft.operationalinsights/workspaces\" | project name, resourceGroupId=strcat(\"/subscriptions/\",subscriptionId,\"/resourceGroups/\",resourceGroup) | where \"{Workspaces}\" contains name | project resourceGroupId | take 1",
            "crossComponentResources": [
              "{Subscriptions}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "897957ad-a946-4b3b-98f0-02008d30ff0f",
            "version": "KqlParameterItem/1.0",
            "name": "WorkspaceName",
            "type": 1,
            "query": "resources | where type==\"microsoft.operationalinsights/workspaces\" \r\n| project name, resourceGroupId=strcat(\"/subscriptions/\",subscriptionId,\"/resourceGroups/\",resourceGroup) \r\n| where \"{Workspaces}\" contains name \r\n| where \"{ResourceGroupId}\" has resourceGroupId\r\n| take 1\r\n",
            "crossComponentResources": [
              "{Subscriptions}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "version": "KqlParameterItem/1.0",
            "name": "WorkspaceResourceGroup",
            "type": 1,
            "query": "resources | where type==\"microsoft.operationalinsights/workspaces\" \r\n| project name, resourceGroupId=strcat(\"/subscriptions/\",subscriptionId,\"/resourceGroups/\",resourceGroup), resourceGroup, subscriptionId \r\n| where \"{WorkspaceName}\" has name \r\n| where \"{ResourceGroupId}\" has resourceGroupId\r\n| take 1\r\n| project resourceGroup\r\n",
            "crossComponentResources": [
              "{Subscriptions}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "id": "75065a95-e81f-470f-805e-427558ee0ea3"
          },
          {
            "version": "KqlParameterItem/1.0",
            "name": "WorkspaceSubscriptionId",
            "type": 1,
            "query": "resources | where type==\"microsoft.operationalinsights/workspaces\" \r\n| project name, resourceGroupId=strcat(\"/subscriptions/\",subscriptionId,\"/resourceGroups/\",resourceGroup), resourceGroup, subscriptionId \r\n| where \"{WorkspaceName}\" has name \r\n| where \"{ResourceGroupId}\" has resourceGroupId\r\n| take 1\r\n| project subscriptionId\r\n",
            "crossComponentResources": [
              "{Subscriptions}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "id": "2581aa73-ab5f-4f2c-82f1-1b4d0f9708ad"
          },
          {
            "id": "5327529a-bd07-4305-bf65-4b36a3c787b9",
            "version": "KqlParameterItem/1.0",
            "name": "LogicApp_VaultSubscriptionList",
            "type": 1,
            "query": "let VaultSubscriptionList = todynamic( replace(\"/subscriptions/\", \"\", @\"{VaultSubscription}\"));\r\nprint VaultSubscriptionList",
            "crossComponentResources": [
              "{Workspaces}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "e404488a-5db7-42ba-9b44-996f1d8cd7b2",
            "version": "KqlParameterItem/1.0",
            "name": "LogicApp_VaultLocationList",
            "type": 1,
            "query": "let VaultLocationList = todynamic( @\"{VaultLocation}\"); \r\nprint VaultLocationList",
            "crossComponentResources": [
              "{Workspaces}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "8005c310-7839-42ff-a3a4-01e5a6c45223",
            "version": "KqlParameterItem/1.0",
            "name": "LogicApp_VaultList",
            "type": 1,
            "query": "let VaultList = todynamic( @\"{VaultName}\"); \r\nprint VaultList",
            "crossComponentResources": [
              "{Workspaces}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "2e3d4cd7-7393-4cc4-ab9e-793311eb291c",
            "version": "KqlParameterItem/1.0",
            "name": "LogicApp_DatasourceTypeList",
            "type": 1,
            "query": "let DatasourceTypeList = @\"{DatasourceType}\";\r\nprint DatasourceTypeList",
            "crossComponentResources": [
              "{Workspaces}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "376631ff-44ae-4824-b470-ac32d82cd4f2",
            "version": "KqlParameterItem/1.0",
            "name": "LogicApp_ExcludeLegacyEvent",
            "type": 1,
            "query": "let ExcludeLegacyEvent = @\"{ExcludeLegacyEvent}\";\r\nprint ExcludeLegacyEvent",
            "crossComponentResources": [
              "{Workspaces}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "5d1a9bc1-34ab-491d-bfa6-f7fc8402f3dc",
            "version": "KqlParameterItem/1.0",
            "name": "LogicApp_AggregationType",
            "type": 1,
            "query": "// function Params - Report Filters\r\nlet RangeStart = startofday({TimeRange:start});\r\nlet RangeEnd = iff(startofday({TimeRange:end}) == startofday(now()) ,startofday({TimeRange:end}) - 1d , startofday({TimeRange:end}));\r\nprint AggregationType=iff(datetime_diff('day',RangeEnd,RangeStart)<=30,\"Daily\",iff(datetime_diff('day',RangeEnd,RangeStart)<=90,\"Weekly\",\"Monthly\"))\r\n\r\n\r\n\r\n\r\n\r\n",
            "crossComponentResources": [
              "{Workspaces}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "892dcb11-ee52-478b-aac2-10892fb837ae",
            "version": "KqlParameterItem/1.0",
            "name": "LogicApp_TimeRangeInDays",
            "type": 1,
            "query": "// function Params - Report Filters\r\nlet RangeStart = startofday({TimeRange:start});\r\nlet RangeEnd = startofday({TimeRange:end});\r\nprint TimeRangeInDays = datetime_diff('day',RangeEnd,RangeStart)\r\n\r\n",
            "crossComponentResources": [
              "{Workspaces}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          }
        ],
        "style": "above",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibility": {
        "parameterName": "Workspaces",
        "comparison": "isNotEqualTo"
      },
      "customWidth": "60",
      "name": "Overview-ReportParameterBlock - Copy",
      "styleSettings": {
        "maxWidth": "100%"
      }
    },
    {
      "type": 1,
      "content": {
        "json": "<span style=\"font-size:12px;font-style:italic\"> All datetimes are in UTC. Data for the current partial day is not shown in the reports. <a href=\"https://aka.ms/AzureBackupReportTimezone\" target=\"_blank\">Learn More</a></span></div>"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Workspaces",
          "comparison": "isNotEqualTo"
        },
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "report"
        }
      ],
      "name": "Overview-InstructionText2a",
      "styleSettings": {
        "margin": "0% 0% 0% 0%",
        "padding": "0% 0% 0% 0%"
      }
    },
    {
      "type": 1,
      "content": {
        "json": "________________"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "TabName",
          "comparison": "isEqualTo",
          "value": "Overview"
        },
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "report"
        }
      ],
      "name": "Overview-DividingLine2a"
    },
    {
      "type": 1,
      "content": {
        "json": "<div style=\"text-align:center;\"><span style=\"font-size:14px;font-weight:600;\"> Welcome to Azure Backup Reports! </span> <br> <br> <span style=\"font-size:12px;font-weight:600;\"> Select your Workspace(s) and click the Summary Tab above to get started </span> </div>"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "TabName",
          "comparison": "isEqualTo",
          "value": "Overview"
        },
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "report"
        }
      ],
      "name": "Overview-WelcomeText1"
    },
    {
      "type": 1,
      "content": {
        "json": "<div style=\"text-align:center;\"><span style=\"font-size:12px;font-weight:500;\"> <u>Salient Features</u> </span>  <span style=\"font-size:12px;font-weight:400;\"> <br><br>  View reports across workload types, subscriptions and regions <br><br> View reports across your tenants using Azure Lighthouse <br><br> Track and forecast usage both at a vault and backup item level <br><br> Analyze trends on jobs, backup items, policies, and more <br><br> Audit backups and restores for all your backup items\r\n</span> <br> </div>"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "TabName",
          "comparison": "isEqualTo",
          "value": "Overview"
        },
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "report"
        }
      ],
      "name": "Overview-WelcomeText2"
    },
    {
      "type": 1,
      "content": {
        "json": "You have vault(s) using **legacy diagnostics settings**. Please use the latest diagnostics settings for all your vaults to make them eligible for reporting upgrades. <a href=\"https://aka.ms/AzureBackupUseResourceSpecific\" target=\"_blank\">Learn More</a>",
        "style": "warning"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "TabName",
          "comparison": "isNotEqualTo",
          "value": "Overview"
        },
        {
          "parameterName": "VaultsUsingAzureDiagnostics",
          "comparison": "isNotEqualTo",
          "value": ""
        },
        {
          "parameterName": "Workspaces",
          "comparison": "isNotEqualTo"
        }
      ],
      "name": "ResourceSpecificTextBox2"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Workspaces}"
        ],
        "parameters": [
          {
            "id": "396c89aa-fd11-4736-8eb9-40c10a04be21",
            "version": "KqlParameterItem/1.0",
            "name": "AggregationType",
            "type": 1,
            "query": "// function Params - Report Filters\r\nlet RangeStart = startofday({TimeRange:start});\r\nlet RangeEnd = iff(startofday({TimeRange:end}) == startofday(now()) ,startofday({TimeRange:end}) - 1d , startofday({TimeRange:end}));\r\nprint AggregationType=iff(datetime_diff('day',RangeEnd,RangeStart)<=30,\"Daily\",iff(datetime_diff('day',RangeEnd,RangeStart)<=90,\"Weekly\",\"Monthly\"))\r\n\r\n",
            "crossComponentResources": [
              "{Workspaces}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          }
        ],
        "style": "above",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "name": "AggregationTypeParam"
    },
    {
      "type": 1,
      "content": {
        "json": "__________________________________________________________________________________________"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Workspaces",
          "comparison": "isNotEqualTo"
        },
        {
          "parameterName": "CustomBackupManagementTypeParam",
          "comparison": "isNotEqualTo"
        }
      ],
      "name": "Overview-DividingLine2",
      "styleSettings": {
        "padding": "0px 0px 10px 0px"
      }
    },
    {
      "type": 1,
      "content": {
        "json": "_________________"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "Workspaces",
          "comparison": "isNotEqualTo"
        },
        {
          "parameterName": "DatasourceType",
          "comparison": "isNotEqualTo"
        }
      ],
      "name": "text - 73"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "template",
        "loadFromTemplateId": "community-Workbooks/Azure Backup/policyadherence-tab",
        "items": []
      },
      "conditionalVisibilities": [
        {
          "parameterName": "TabName",
          "comparison": "isEqualTo",
          "value": "Policy Adherence"
        },
        {
          "parameterName": "Workspaces",
          "comparison": "isNotEqualTo"
        },
        {
          "parameterName": "DatasourceType",
          "comparison": "isNotEqualTo"
        }
      ],
      "name": "PolicyAdherence-group"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "template",
        "loadFromTemplateId": "community-Workbooks/Azure Backup/policydetails-tab",
        "items": []
      },
      "conditionalVisibilities": [
        {
          "parameterName": "TabName",
          "comparison": "isEqualTo",
          "value": "PolicyDetails"
        },
        {
          "parameterName": "Workspaces",
          "comparison": "isNotEqualTo"
        },
        {
          "parameterName": "DatasourceType",
          "comparison": "isNotEqualTo"
        }
      ],
      "name": "policy-group"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "template",
        "loadFromTemplateId": "community-Workbooks/Azure Backup/jobdistribution-tab",
        "items": []
      },
      "conditionalVisibilities": [
        {
          "parameterName": "TabName",
          "comparison": "isEqualTo",
          "value": "JobDistribution"
        },
        {
          "parameterName": "Workspaces",
          "comparison": "isNotEqualTo"
        },
        {
          "parameterName": "DatasourceType",
          "comparison": "isNotEqualTo"
        }
      ],
      "name": "jobs-group"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "template",
        "loadFromTemplateId": "community-Workbooks/Azure Backup/usage-tab",
        "items": []
      },
      "conditionalVisibilities": [
        {
          "parameterName": "TabName",
          "comparison": "isEqualTo",
          "value": "Usage"
        },
        {
          "parameterName": "Workspaces",
          "comparison": "isNotEqualTo"
        },
        {
          "parameterName": "DatasourceType",
          "comparison": "isNotEqualTo"
        }
      ],
      "name": "usage-group"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "template",
        "loadFromTemplateId": "community-Workbooks/Azure Backup/backupitems-tab",
        "items": []
      },
      "conditionalVisibilities": [
        {
          "parameterName": "TabName",
          "comparison": "isEqualTo",
          "value": "BackupItems"
        },
        {
          "parameterName": "Workspaces",
          "comparison": "isNotEqualTo"
        },
        {
          "parameterName": "DatasourceType",
          "comparison": "isNotEqualTo"
        }
      ],
      "name": "backupitems-group"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "<div style=\"text-align:left\"><span style=\"font-size:14px;font-weight:600;\">Key Parameters by Backup Solution </span> </div>"
                  },
                  "customWidth": "100",
                  "conditionalVisibilities": [
                    {
                      "parameterName": "TabName",
                      "comparison": "isEqualTo",
                      "value": "Summary"
                    },
                    {
                      "parameterName": "Workspaces",
                      "comparison": "isNotEqualTo"
                    },
                    {
                      "parameterName": "DatasourceType",
                      "comparison": "isNotEqualTo"
                    }
                  ],
                  "name": "Summary-GridTitle1",
                  "styleSettings": {
                    "margin": "0% 0% 0% 0%"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "// function Params - Report Filters\r\nlet RangeStart = startofday({TimeRange:start});\r\nlet RangeEnd = iff(startofday({TimeRange:end}) == startofday(now()) ,startofday({TimeRange:end}) - 1d , startofday({TimeRange:end}));\r\nlet VaultSubscriptionList = todynamic( replace(\"/subscriptions/\", \"\", @\"{VaultSubscription}\"));\r\nlet VaultLocationList = todynamic( @\"{VaultLocation}\"); \r\nlet VaultTypeList = \"*\";\r\nlet VaultList = todynamic( @\"{VaultName}\");\r\nlet ExcludeLegacyEvent = @\"{ExcludeLegacyEvent}\";\r\nlet BackupSolutionList = @\"{DatasourceType}\";\r\n// function Params - other Filters\r\nlet ProtectionInfoList =  \"*\";\r\nlet Item_search =   \"*;*\";\r\nlet ItemArray = split(Item_search, \";\");\r\nlet ItemArray_length = array_length(ItemArray);\r\nlet BackupInstanceName = iff(ItemArray_length == 2, ItemArray[1], ItemArray[0] );\r\nlet DatasourceSetName = iff(ItemArray_length == 2, ItemArray[0], \"\");\r\nlet DisplayAllFields = false;\r\nlet JobOperationList = \"*\";\r\nlet JobStatusList =  \"*\";\r\nlet JobFailureCodeList =  \"*\";\r\nlet ExcludeLog = True;\r\nlet BillingGroupName = \"*\";\r\n(\r\n// calling LA System Function\r\n_AzureBackup_GetBackupInstances(RangeEnd, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList, ProtectionInfoList, DatasourceSetName, BackupInstanceName, DisplayAllFields)\r\n| count | extend Dummy = 1\r\n) \r\n| join (\r\n// calling LA System Function\r\n_AzureBackup_GetBillingGroups(RangeEnd, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList, BillingGroupName) \r\n| summarize Sum_VaultStore_StorageConsumption_InGBs = sum(VaultStore_StorageConsumptionInMBs)/1024, sum_ProtectedInstanceCount = sum(todouble(parse_json(ExtendedProperties).ProtectedInstanceCount)) | extend Dummy = 1\r\n) on Dummy \r\n| join (\r\n// calling LA System Function\r\n_AzureBackup_GetJobs(RangeStart, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList, JobOperationList, JobStatusList, JobFailureCodeList, DatasourceSetName, BackupInstanceName, ExcludeLog) \r\n| summarize dcount(UniqueId,4) | extend Dummy = 1\r\n) on Dummy \r\n| extend  Key = pack_array( \"Backup Instances\", \"Protected Instances\",  \"Cloud Storage (GB)\", \"Jobs Created\"), Value = pack_array( Count, sum_ProtectedInstanceCount, Sum_VaultStore_StorageConsumption_InGBs, dcount_UniqueId), \r\nSubTitle = pack_array( \"\", \"\", \"\", \"\")\r\n| project Key, Value, SubTitle \r\n| mvexpand Key, Value, SubTitle",
                    "size": 4,
                    "noDataMessage": "No records found for the selected time range and scope",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspaces}"
                    ],
                    "visualization": "tiles",
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "Key",
                        "formatter": 1,
                        "formatOptions": {
                          "showIcon": true
                        }
                      },
                      "subtitleContent": {
                        "columnMatch": "SubTitle",
                        "formatter": 1,
                        "formatOptions": {
                          "showIcon": true
                        }
                      },
                      "leftContent": {
                        "columnMatch": "Value",
                        "formatter": 12,
                        "formatOptions": {
                          "showIcon": true
                        },
                        "numberFormat": {
                          "unit": 0,
                          "options": {
                            "style": "decimal",
                            "minimumFractionDigits": 0,
                            "maximumFractionDigits": 2
                          }
                        }
                      },
                      "showBorder": true
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "TabName",
                      "comparison": "isEqualTo",
                      "value": "Summary"
                    },
                    {
                      "parameterName": "Workspaces",
                      "comparison": "isNotEqualTo"
                    },
                    {
                      "parameterName": "DatasourceType",
                      "comparison": "isNotEqualTo"
                    }
                  ],
                  "showPin": true,
                  "name": "Summary-Tiles",
                  "styleSettings": {
                    "margin": "0% 0% 0% -15px"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "// function Params - Report Filters\r\nlet RangeStart = startofday({TimeRange:start});\r\nlet RangeEnd = iff(startofday({TimeRange:end}) == startofday(now()) ,startofday({TimeRange:end}) - 1d , startofday({TimeRange:end}));\r\nlet VaultSubscriptionList = todynamic( replace(\"/subscriptions/\", \"\", @\"{VaultSubscription}\"));\r\nlet VaultLocationList = todynamic( @\"{VaultLocation}\"); \r\nlet VaultTypeList = \"*\";\r\nlet VaultList = todynamic( @\"{VaultName}\");\r\nlet ExcludeLegacyEvent = @\"{ExcludeLegacyEvent}\";\r\nlet BackupSolutionList = @\"{DatasourceType}\";\r\n// function Params - other Filters\r\nlet ProtectionInfoList =  \"*\";\r\nlet Item_search =   \"*;*\";\r\nlet ItemArray = split(Item_search, \";\");\r\nlet ItemArray_length = array_length(ItemArray);\r\nlet BackupInstanceName = iff(ItemArray_length == 2, ItemArray[1], ItemArray[0] );\r\nlet DatasourceSetName = iff(ItemArray_length == 2, ItemArray[0], \"\");\r\nlet DisplayAllFields = true;\r\nlet JobOperationList = \"*\";\r\nlet JobStatusList =  \"*\";\r\nlet JobFailureCodeList =  \"*\";\r\nlet ExcludeLog = True;\r\nlet BackupInstanceDetails = (){\r\n// calling LA System Function\r\n_AzureBackup_GetBackupInstances(RangeEnd, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList, ProtectionInfoList, DatasourceSetName, BackupInstanceName, DisplayAllFields)\r\n// query to transform function output\r\n| summarize BackupInstances=count(UniqueId), CloudStorage=sum(VaultStore_StorageConsumptionInMBs)/(1024) by BackupSolution\r\n};\r\nlet JobSuccessPercentageTable = (){\r\n// calling LA System Function\r\n_AzureBackup_GetJobs(RangeStart, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList, JobOperationList, JobStatusList, JobFailureCodeList, DatasourceSetName, BackupInstanceName, ExcludeLog)\r\n// query to transform function output\r\n| extend success=iff((Status == \"Completed\" or Status == \"CompletedWithWarnings\") , 1 , 0)\r\n| extend record = iff(UniqueId != \"\", 1, 0)  // to be used for total row count\r\n| summarize SuccessfulCount =sum(success), TotalCount=sum(record) by BackupSolution\r\n| extend JobSuccessPercentage = (SuccessfulCount*100)/todouble(TotalCount)\r\n| project-away SuccessfulCount, TotalCount\r\n};\r\nBackupInstanceDetails | join kind = leftouter (JobSuccessPercentageTable) on BackupSolution  | project-away BackupSolution1 | project BackupSolution, BackupInstances, JobSuccessPercentage=iff( (isnan( JobSuccessPercentage) or isinf( JobSuccessPercentage) or isempty( JobSuccessPercentage)), \"-\", strcat(tostring(round( JobSuccessPercentage,2)), \" %\")), CloudStorage",
                    "size": 3,
                    "noDataMessage": "No records found for the selected time range and scope",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspaces}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "BackupSolution",
                          "formatter": 0,
                          "tooltipFormat": {
                            "tooltip": "Backup Solution"
                          }
                        },
                        {
                          "columnMatch": "BackupInstances",
                          "formatter": 4,
                          "formatOptions": {
                            "min": 0,
                            "palette": "blue",
                            "customColumnWidthSetting": "25%"
                          },
                          "tooltipFormat": {
                            "tooltip": "Number of backup instances backed up using the given backup solution, as of the end of the selected time range"
                          }
                        },
                        {
                          "columnMatch": "JobSuccessPercentage",
                          "formatter": 1,
                          "formatOptions": {
                            "customColumnWidthSetting": "25%"
                          },
                          "numberFormat": {
                            "unit": 1,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false,
                              "maximumFractionDigits": 2
                            }
                          },
                          "tooltipFormat": {
                            "tooltip": "% of Jobs (that were triggered in the selected time range) that were successful for backup instances backed up using the given backup solution"
                          }
                        },
                        {
                          "columnMatch": "CloudStorage",
                          "formatter": 4,
                          "formatOptions": {
                            "min": 0,
                            "palette": "blue",
                            "customColumnWidthSetting": "25%"
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal",
                              "minimumFractionDigits": 2,
                              "maximumFractionDigits": 2
                            }
                          },
                          "tooltipFormat": {
                            "tooltip": "Total cloud storage consumed by backup instances backed up by the given backup solution, as of the end of the selected time range"
                          }
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "BackupSolution",
                          "label": "Backup Solution"
                        },
                        {
                          "columnId": "BackupInstances",
                          "label": "Backup Instances"
                        },
                        {
                          "columnId": "JobSuccessPercentage",
                          "label": "Job Success %"
                        },
                        {
                          "columnId": "CloudStorage",
                          "label": "Cloud Storage (GB)"
                        }
                      ]
                    },
                    "sortBy": []
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "TabName",
                      "comparison": "isEqualTo",
                      "value": "Summary"
                    },
                    {
                      "parameterName": "Workspaces",
                      "comparison": "isNotEqualTo"
                    },
                    {
                      "parameterName": "DatasourceType",
                      "comparison": "isNotEqualTo"
                    }
                  ],
                  "showPin": true,
                  "name": "Summary-Grid",
                  "styleSettings": {
                    "margin": "-23px 0% 0% 0%",
                    "showBorder": true
                  }
                }
              ]
            },
            "name": "group - 0"
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "TabName",
          "comparison": "isEqualTo",
          "value": "Summary"
        },
        {
          "parameterName": "Workspaces",
          "comparison": "isNotEqualTo"
        },
        {
          "parameterName": "DatasourceType",
          "comparison": "isNotEqualTo"
        }
      ],
      "name": "summary-group"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "template",
        "loadType": "always",
        "loadFromTemplateId": "community-Workbooks/Azure Backup/optimize-tab",
        "items": [],
        "exportParameters": true
      },
      "conditionalVisibilities": [
        {
          "parameterName": "TabName",
          "comparison": "isEqualTo",
          "value": "Optimize"
        },
        {
          "parameterName": "Workspaces",
          "comparison": "isNotEqualTo"
        },
        {
          "parameterName": "DatasourceType",
          "comparison": "isNotEqualTo"
        }
      ],
      "name": "Optimize-group"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "template",
        "loadFromTemplateId": "community-Workbooks/Azure Backup/optimize-tab",
        "items": []
      },
      "conditionalVisibilities": [
        {
          "parameterName": "TabName",
          "comparison": "isEqualTo",
          "value": "Email"
        },
        {
          "parameterName": "Workspaces",
          "comparison": "isNotEqualTo"
        },
        {
          "parameterName": "DatasourceType",
          "comparison": "isNotEqualTo"
        }
      ],
      "name": "Email-group"
    }
  ],
  "fallbackResourceIds": [
    "Azure Monitor"
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}